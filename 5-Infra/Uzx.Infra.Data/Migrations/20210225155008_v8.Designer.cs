// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uzx.Infra.Data.Context;

namespace Uzx.Infra.Data.Migrations
{
    [DbContext(typeof(UzxBaseDbContext))]
    [Migration("20210225155008_v8")]
    partial class v8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Uzx.Domain.Core.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("MessageType")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationDate");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoredEvent");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Patio")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.AddressTypes", b =>
                {
                    b.Property<Guid>("AdressTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("AdressTypesId");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Agents", b =>
                {
                    b.Property<Guid>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Banners", b =>
                {
                    b.Property<Guid>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NameBanner")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Page")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Breeds", b =>
                {
                    b.Property<Guid>("BreedsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BreedsId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Categories", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cids", b =>
                {
                    b.Property<Guid>("CidsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CidsId");

                    b.ToTable("Cids");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cities", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Clients", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Document1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Document2")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name2")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Person")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("dddb5fcf-4798-4cdb-bc29-b11aaff5d093"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 486, DateTimeKind.Local).AddTicks(9855),
                            IsActive = true,
                            IsAdmin = true,
                            IsDeleted = false,
                            Name1 = "Administrador Uzenix",
                            Name2 = "Admin",
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Person = "1",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsConfigurations", b =>
                {
                    b.Property<Guid>("ClientConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessPort")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("DataBaseIP")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseLogin")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseName")
                        .HasColumnType("text");

                    b.Property<string>("DataBasePassword")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCampaingSave")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelFields")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<bool>("enableSsl")
                        .HasColumnType("boolean");

                    b.Property<string>("smtpPass")
                        .HasColumnType("text");

                    b.Property<string>("smtpPort")
                        .HasColumnType("text");

                    b.Property<string>("smtpServer")
                        .HasColumnType("text");

                    b.Property<string>("smtpUser")
                        .HasColumnType("text");

                    b.HasKey("ClientConfigurationId");

                    b.ToTable("ClientsConfigurations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsContacts", b =>
                {
                    b.Property<Guid>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactSector")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientContactId");

                    b.ToTable("ClientsContacts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsNewsletter", b =>
                {
                    b.Property<Guid>("ClientNewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientNewsletterId");

                    b.ToTable("ClientsNewsletter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsOperators", b =>
                {
                    b.Property<Guid>("ClientOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientOperatorId");

                    b.ToTable("ClientsOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.Property<Guid>("ClientSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientSystemId");

                    b.HasIndex("SystemId");

                    b.ToTable("ClientsSystems");

                    b.HasData(
                        new
                        {
                            ClientSystemId = new Guid("389f28b1-44d1-4b2f-8a2c-55c777414c89"),
                            ClientId = new Guid("dddb5fcf-4798-4cdb-bc29-b11aaff5d093"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 489, DateTimeKind.Local).AddTicks(7190),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CompanyOperators", b =>
                {
                    b.Property<Guid>("CompanyOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyOperatorId");

                    b.ToTable("CompanyOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CostCenter", b =>
                {
                    b.Property<Guid>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Countries", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Coupons", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(200)");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Customers", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AddressIsVisible")
                        .HasColumnType("boolean");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EmailIsVisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("LogoIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("PhoneNumberIsVisible")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SiteIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersBanners", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BannerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersBanners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersCoupons", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersCoupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersEvents", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersEvents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSalePlans", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSocialMedias", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Departments", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Doctors", b =>
                {
                    b.Property<Guid>("DoctorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DoctorsId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Educations", b =>
                {
                    b.Property<Guid>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Events", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Titel")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.EventsSocialMedias", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EventId");

                    b.ToTable("EventsSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.FamilyType", b =>
                {
                    b.Property<Guid>("FamilyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FamilyTypeId");

                    b.ToTable("FamilyType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Functions", b =>
                {
                    b.Property<Guid>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsers", b =>
                {
                    b.Property<Guid>("GroupUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserId");

                    b.ToTable("GroupUsers");

                    b.HasData(
                        new
                        {
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(5762),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administradores",
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsersMenus", b =>
                {
                    b.Property<Guid>("GroupUserMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserMenuId");

                    b.ToTable("GroupUsersMenus");

                    b.HasData(
                        new
                        {
                            GroupUserMenuId = new Guid("ec69f0c3-127c-4d2c-aeb4-21fa667ccb60"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8431),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("8b203b25-6b5e-4ffa-bdde-9a59a8a28135"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8752),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9b0ee588-dcae-41c0-b877-fd15db26c458"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("29e784b2-388e-4e4d-b218-953251e442cc"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8788),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("17381e11-d15c-4ec7-a74d-8b09e3cbdb07"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("0bb6192a-ada3-449b-ad36-b783c70a98e6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8812),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0a939875-dcbf-4b32-8bba-981b9fee11ea"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("1080123c-8650-4eff-a0d7-b9de4a35c4d6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8833),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c89b1377-2f94-4dd5-bc28-b39548649cfb"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("4624d78e-5360-4eb3-8ff8-abbdb58bf1ee"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8859),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5e91c7be-43e3-4591-8ea0-b9c9f668664b"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("b47bed69-ffb1-4034-940c-0db0d96088aa"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8886),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2ba24d9c-e1f3-4278-95bb-73822070fc75"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("09b099e8-d3aa-4ac7-95e5-4bb0eb457b2a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8908),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("45ea7c7e-97fb-4162-b213-5cf1bd1ded55"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("ece3fb7d-8c6a-402b-aa8b-90ecf6b794ac"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8929),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9c6bd378-01a7-45df-997f-bc81448bd6f6"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("75a90bb5-abaa-4dbb-afae-1171baf22a0a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8952),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c0b2c31b-08c4-432d-854c-6f51f7e44bfa"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("7383e1ab-9b2e-46d1-9977-62b84c8518a7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8973),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9a3ea24d-81a9-4c2b-93ef-504d65a1565e"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("baf20a3f-81ae-4153-9889-cd3304ad2fe8"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(8995),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("744aeb02-0288-4ba4-817c-103185a96718"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("3007be7c-9a22-4357-a152-0b0fccc6ae13"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9016),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c8da1897-82ea-48e8-869d-a7ca8d889cde"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("8c9dafe0-b14f-405c-a378-bb085ecf201e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9038),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("89e526c1-adc1-4915-a122-fd624b9d006f"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("2cc94739-345c-4c42-af27-cc8d0fd20551"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9106),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("16549b40-8e40-4d5e-842b-e11b4a2d3124"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("2d018120-12d0-4070-9a1d-2d9c4d0fd8a9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9131),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("266548c4-9282-4231-8686-1b9b0f8d49db"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("4369843f-bc8f-4e3d-9c1b-65e5d3487c07"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9152),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4b52bbd1-13dc-4e2b-8fe0-36678b272fa5"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("60be98b2-3aa6-4c83-acb0-0106ba917b2c"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9176),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6aaa04e7-3e6f-4520-b73b-40fbf5253319"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("942f7d6b-4db4-4053-8054-fd8c95be1095"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9197),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8f22a4e3-699e-43dc-838e-fb49de702649"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("e98e4602-809d-46f6-9081-8b44c440cd0b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9219),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2fd853db-9232-492e-aa4d-41a3dd8083e4"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("83da8e00-d424-47ca-ad83-d6421c87d4e7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9240),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8bd34a4c-24e7-47cc-966e-754662fc9aa8"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("7429ac95-fb49-43f3-8ca1-93c3420e07c7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(9262),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f8693bc7-80a4-4b87-a300-e808b96a0983"),
                            R = true,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            U = true
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Higher", b =>
                {
                    b.Property<Guid>("HigherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HigherId");

                    b.ToTable("Higher");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Hospitals", b =>
                {
                    b.Property<Guid>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Kinship", b =>
                {
                    b.Property<Guid>("KinshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("KinshipId");

                    b.ToTable("Kinship");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Languages", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = new Guid("cb2650bb-d3f8-4b45-88fe-6610919576bd"),
                            Alt = "Idioma do país Brasil",
                            Country = "Brasil",
                            Description = "Idioma em Portugues Brasileiro",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(964),
                            FileName = "ptbr.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Portugues",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("ef81d6f6-8f59-42f8-b327-47c0ddcee435"),
                            Alt = "Idioma do país EUA",
                            Country = "EUA",
                            Description = "Idioma em Inglês Norte Americano",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(4203),
                            FileName = "us.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inglês",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("03090d0b-6338-4a36-9241-fbb3104140c0"),
                            Alt = "Idioma do país Espanha.",
                            Country = "Espanha",
                            Description = "Idioma em Espanhol da Espanha.",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(4326),
                            FileName = "es.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Espanhol",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MaritalStatus", b =>
                {
                    b.Property<Guid>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Menus", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("MenuIdPai")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenusTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Target")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            Alt = "Menu de Cadastros",
                            Description = "Menu para realizar diversos cadastros",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(9651),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("00000000-0000-0000-0000-000000000000"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastros",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("9b0ee588-dcae-41c0-b877-fd15db26c458"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(2757),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operadoras",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("17381e11-d15c-4ec7-a74d-8b09e3cbdb07"),
                            Alt = "Listagem de Operadoras",
                            Description = "Realiza a busca de Operadoras",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(2877),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/list",
                            MenuIdPai = new Guid("9b0ee588-dcae-41c0-b877-fd15db26c458"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("0a939875-dcbf-4b32-8bba-981b9fee11ea"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(2930),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/details",
                            MenuIdPai = new Guid("9b0ee588-dcae-41c0-b877-fd15db26c458"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c89b1377-2f94-4dd5-bc28-b39548649cfb"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3068),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("5e91c7be-43e3-4591-8ea0-b9c9f668664b"),
                            Alt = "Listagem de Usuarios",
                            Description = "Realiza a busca de Usuarios",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3128),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/list",
                            MenuIdPai = new Guid("c89b1377-2f94-4dd5-bc28-b39548649cfb"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2ba24d9c-e1f3-4278-95bb-73822070fc75"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3177),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/details",
                            MenuIdPai = new Guid("c89b1377-2f94-4dd5-bc28-b39548649cfb"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("45ea7c7e-97fb-4162-b213-5cf1bd1ded55"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3229),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menus",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("9c6bd378-01a7-45df-997f-bc81448bd6f6"),
                            Alt = "Listagem de Menus",
                            Description = "Realiza a busca de Menus",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3354),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/list",
                            MenuIdPai = new Guid("45ea7c7e-97fb-4162-b213-5cf1bd1ded55"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c0b2c31b-08c4-432d-854c-6f51f7e44bfa"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3411),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/details",
                            MenuIdPai = new Guid("45ea7c7e-97fb-4162-b213-5cf1bd1ded55"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("9a3ea24d-81a9-4c2b-93ef-504d65a1565e"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3461),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Clientes",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("744aeb02-0288-4ba4-817c-103185a96718"),
                            Alt = "Listagem de Clientes",
                            Description = "Realiza a busca de Clientes",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3510),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/list",
                            MenuIdPai = new Guid("9a3ea24d-81a9-4c2b-93ef-504d65a1565e"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c8da1897-82ea-48e8-869d-a7ca8d889cde"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3557),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/details",
                            MenuIdPai = new Guid("9a3ea24d-81a9-4c2b-93ef-504d65a1565e"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("89e526c1-adc1-4915-a122-fd624b9d006f"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3610),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Idiomas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("16549b40-8e40-4d5e-842b-e11b4a2d3124"),
                            Alt = "Listagem de Idiomas",
                            Description = "Realiza a busca de Idiomas",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3661),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/list",
                            MenuIdPai = new Guid("89e526c1-adc1-4915-a122-fd624b9d006f"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("266548c4-9282-4231-8686-1b9b0f8d49db"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3748),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/details",
                            MenuIdPai = new Guid("89e526c1-adc1-4915-a122-fd624b9d006f"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("4b52bbd1-13dc-4e2b-8fe0-36678b272fa5"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3798),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sistemas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("6aaa04e7-3e6f-4520-b73b-40fbf5253319"),
                            Alt = "Listagem de Sistemas",
                            Description = "Realiza a busca de Sistemas",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3852),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/list",
                            MenuIdPai = new Guid("4b52bbd1-13dc-4e2b-8fe0-36678b272fa5"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8f22a4e3-699e-43dc-838e-fb49de702649"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3904),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/details",
                            MenuIdPai = new Guid("4b52bbd1-13dc-4e2b-8fe0-36678b272fa5"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2fd853db-9232-492e-aa4d-41a3dd8083e4"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3951),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Grupo de Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8bd34a4c-24e7-47cc-966e-754662fc9aa8"),
                            Alt = "Listagem de Grupo de Usuarios",
                            Description = "Realiza a busca de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3997),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/list",
                            MenuIdPai = new Guid("2fd853db-9232-492e-aa4d-41a3dd8083e4"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("f8693bc7-80a4-4b87-a300-e808b96a0983"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(4096),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/details",
                            MenuIdPai = new Guid("2fd853db-9232-492e-aa4d-41a3dd8083e4"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MenusTypes", b =>
                {
                    b.Property<Guid>("MenusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("MenusTypeId");

                    b.ToTable("MenusType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Offices", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Plans", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CompanyOperatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Procedures", b =>
                {
                    b.Property<Guid>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Providers", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Responsabilities", b =>
                {
                    b.Property<Guid>("ResponsabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ResponsabilityId");

                    b.ToTable("Resposabilities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SalePlans", b =>
                {
                    b.Property<Guid>("SalePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DurationMounth")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanner")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoupons")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvents")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGuia")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SalePlanId");

                    b.ToTable("SalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Shifts", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SocialMedias", b =>
                {
                    b.Property<Guid>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SocialMediaId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Specialities", b =>
                {
                    b.Property<Guid>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.States", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.StatusSolicitation", b =>
                {
                    b.Property<Guid>("SatusSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SatusSolicitationId");

                    b.ToTable("StatusSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Systems", b =>
                {
                    b.Property<Guid>("SystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemId");

                    b.ToTable("Systems");

                    b.HasData(
                        new
                        {
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            Alt = "Sistema Administrativo",
                            Description = "Sistema Administrativo",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 489, DateTimeKind.Local).AddTicks(4431),
                            Image = "",
                            IsActive = true,
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsLanguages", b =>
                {
                    b.Property<Guid>("SystemLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("SystemLanguageId");

                    b.ToTable("SystemsLanguages");

                    b.HasData(
                        new
                        {
                            SystemLanguageId = new Guid("65951ba1-de61-46f7-8936-c2a0bf993d3a"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(3933),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("cb2650bb-d3f8-4b45-88fe-6610919576bd"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("6257ccdc-6717-456a-b59b-658bfcb8400a"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(4294),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("ef81d6f6-8f59-42f8-b327-47c0ddcee435"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("c40e757b-2da9-43e4-9787-3e2b3a470e67"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 490, DateTimeKind.Local).AddTicks(4357),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("03090d0b-6338-4a36-9241-fbb3104140c0"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsMenus", b =>
                {
                    b.Property<Guid>("SystemMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemMenuId");

                    b.ToTable("SystemsMenus");

                    b.HasData(
                        new
                        {
                            SystemMenuId = new Guid("ba6b1f12-c70a-4dca-973c-7700893c871e"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(2014),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8ec3d665-9440-4181-9d2c-79b323f7435e"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(2833),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9b0ee588-dcae-41c0-b877-fd15db26c458"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("193ba98b-a12e-46b8-9167-15ee80fd0fea"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(2903),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("17381e11-d15c-4ec7-a74d-8b09e3cbdb07"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("a7a5b125-35a3-4274-ad26-83cba4015558"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(2953),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0a939875-dcbf-4b32-8bba-981b9fee11ea"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("583e4a0d-4a79-4942-a04f-b0b9b89a3266"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3096),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c89b1377-2f94-4dd5-bc28-b39548649cfb"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("3326e25c-7479-4361-b493-135fe84e1748"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3151),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5e91c7be-43e3-4591-8ea0-b9c9f668664b"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("e63f52ac-0eca-45ff-b778-dbf343510a6b"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3202),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2ba24d9c-e1f3-4278-95bb-73822070fc75"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("7028abc3-4af3-4fe6-97c9-80438b1f8932"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3319),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("45ea7c7e-97fb-4162-b213-5cf1bd1ded55"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("7151affe-385f-41e6-819d-ba42ab4ee13c"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3380),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9c6bd378-01a7-45df-997f-bc81448bd6f6"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("5f1a3f2d-8886-4f8b-9e75-a5138202399e"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3434),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c0b2c31b-08c4-432d-854c-6f51f7e44bfa"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("a0e35bd7-42d6-410d-8dd1-c34132e00ab5"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3485),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9a3ea24d-81a9-4c2b-93ef-504d65a1565e"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("1dbe0c06-ccdb-4226-b274-fd4ba50a2da9"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3532),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("744aeb02-0288-4ba4-817c-103185a96718"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("1daa91ed-dc2a-434b-a270-fbe428bf8a0e"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3579),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c8da1897-82ea-48e8-869d-a7ca8d889cde"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("a65135d4-096d-45b2-992c-20a30c5d8824"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3635),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("89e526c1-adc1-4915-a122-fd624b9d006f"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("946869a2-f0d5-464e-87a4-8de3c106f316"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3720),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("16549b40-8e40-4d5e-842b-e11b4a2d3124"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("d78ff3d8-9d6c-4802-8cda-efae34b07a80"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3772),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("266548c4-9282-4231-8686-1b9b0f8d49db"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("2abb33f9-7294-4bd3-87cd-9b8861d1befb"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3821),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4b52bbd1-13dc-4e2b-8fe0-36678b272fa5"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("356d5ca8-eb85-43fc-8f3f-2cf5caffc35c"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3877),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6aaa04e7-3e6f-4520-b73b-40fbf5253319"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("03aeec1f-0a1d-4ed8-9753-f036c40dadbd"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3926),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8f22a4e3-699e-43dc-838e-fb49de702649"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("fd9a1cd9-8506-46b0-b40b-e1e8ec0ba85c"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(3973),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2fd853db-9232-492e-aa4d-41a3dd8083e4"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("f940f1ba-e519-4d17-9111-8c86d9135c12"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(4018),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8bd34a4c-24e7-47cc-966e-754662fc9aa8"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("10be4f5d-1835-4696-ad9e-e34dac345524"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 491, DateTimeKind.Local).AddTicks(4122),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f8693bc7-80a4-4b87-a300-e808b96a0983"),
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TransportLines", b =>
                {
                    b.Property<Guid>("TransportLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportLineId");

                    b.ToTable("TransportLines");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Transports", b =>
                {
                    b.Property<Guid>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Treatments", b =>
                {
                    b.Property<Guid>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TreatmentId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeProviders", b =>
                {
                    b.Property<Guid>("TypeProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeProviderId");

                    b.ToTable("TypeProviders");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeSolicitation", b =>
                {
                    b.Property<Guid>("TypeSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeSolicitationId");

                    b.ToTable("TypeSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeTransports", b =>
                {
                    b.Property<Guid>("TypeTransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeTransportId");

                    b.ToTable("TypeTransports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Unions", b =>
                {
                    b.Property<Guid>("UnionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UnionId");

                    b.ToTable("Unions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("6acde0fe-4bbb-42de-bd86-ab8b64712343"),
                            ClientId = new Guid("dddb5fcf-4798-4cdb-bc29-b11aaff5d093"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 492, DateTimeKind.Local).AddTicks(2953),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrador",
                            Surname = "Master",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersAccess", b =>
                {
                    b.Property<Guid>("UserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DTVerify")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserAccessId");

                    b.ToTable("UsersAccess");

                    b.HasData(
                        new
                        {
                            UserAccessId = new Guid("787fe36a-82f6-4027-bae4-b24e14889153"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 492, DateTimeKind.Local).AddTicks(5429),
                            IsActive = true,
                            IsDeleted = false,
                            IsVerify = true,
                            Login = "user@uzenix.com",
                            Password = "AO5+45YXX6IBTW3FF/sVqz7BxjClYY3xE0qkWef8lLgJOnM7Rk6cUiF3t8v5huFcWw==",
                            UserId = new Guid("6acde0fe-4bbb-42de-bd86-ab8b64712343")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissions", b =>
                {
                    b.Property<Guid>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionId");

                    b.ToTable("UsersPermissions");

                    b.HasData(
                        new
                        {
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b"),
                            ClientId = new Guid("dddb5fcf-4798-4cdb-bc29-b11aaff5d093"),
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 492, DateTimeKind.Local).AddTicks(8712),
                            GroupUserId = new Guid("dcb99cb0-d912-45c2-8175-406f7675c4cd"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("53f26e76-eeb4-4a01-81fa-e36ca720342b"),
                            UserId = new Guid("6acde0fe-4bbb-42de-bd86-ab8b64712343")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissionsMenus", b =>
                {
                    b.Property<Guid>("UserPermissionMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserPermissionId")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionMenuId");

                    b.ToTable("UsersPermissionsMenus");

                    b.HasData(
                        new
                        {
                            UserPermissionMenuId = new Guid("9202e232-02bd-4380-b0a9-8e293c78065d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2321),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0ba94ebb-dd7d-40f2-8d65-53cd977e9bf0"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("2dc5ae93-e47a-42b9-a251-b20a8ee24aa6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2565),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9b0ee588-dcae-41c0-b877-fd15db26c458"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("6fb542aa-4941-4206-94ae-1b9c38025000"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2601),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("17381e11-d15c-4ec7-a74d-8b09e3cbdb07"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("c6b90981-da26-4a61-89b6-6a0abc3bda3d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2693),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0a939875-dcbf-4b32-8bba-981b9fee11ea"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("0843a74d-1d66-424f-9c98-e185c81c8b9b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2724),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c89b1377-2f94-4dd5-bc28-b39548649cfb"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("b11c2b30-a499-4793-b0dc-8bf59342212e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2753),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5e91c7be-43e3-4591-8ea0-b9c9f668664b"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("c9866a25-ae45-4407-9a27-42fbb76a4235"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2775),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2ba24d9c-e1f3-4278-95bb-73822070fc75"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("85f3231a-9cd9-4ec5-a2aa-8082162e8573"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2798),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("45ea7c7e-97fb-4162-b213-5cf1bd1ded55"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e93ab32f-2d13-49aa-a8a2-c0860a171f6a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2821),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9c6bd378-01a7-45df-997f-bc81448bd6f6"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("eb8a1453-5caf-4864-a997-335ba7c26bc0"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2845),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c0b2c31b-08c4-432d-854c-6f51f7e44bfa"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("8ebcee38-759c-4bd8-9259-f595a1591c29"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2867),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9a3ea24d-81a9-4c2b-93ef-504d65a1565e"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("7c5c57ff-c6b6-44e0-8807-947d5a76fd36"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2890),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("744aeb02-0288-4ba4-817c-103185a96718"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ec106864-8f27-4ca8-a9dc-de595b233ea9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2914),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c8da1897-82ea-48e8-869d-a7ca8d889cde"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("50e817e7-9bc7-4eae-a23f-d155f73301c8"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2937),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("89e526c1-adc1-4915-a122-fd624b9d006f"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("2122167a-8a28-4278-99ad-7dc863609fb5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2959),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("16549b40-8e40-4d5e-842b-e11b4a2d3124"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("f0641e2c-246a-4dce-be3e-34546cca4a91"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(2982),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("266548c4-9282-4231-8686-1b9b0f8d49db"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("30ef7bbc-8fa9-4bdf-979c-2b301d661e4a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(3004),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4b52bbd1-13dc-4e2b-8fe0-36678b272fa5"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("7fa19468-5bfb-4528-9ef7-fc29d3bfa72d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(3028),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6aaa04e7-3e6f-4520-b73b-40fbf5253319"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ad2502c8-dfd0-4159-b7f9-ac14e4b705c2"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(3146),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8f22a4e3-699e-43dc-838e-fb49de702649"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("5d96bac9-1291-4835-af06-06955320e4c6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(3174),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2fd853db-9232-492e-aa4d-41a3dd8083e4"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("0a8174e9-81de-4d92-bb3d-3dbb29ce6f18"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(3198),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8bd34a4c-24e7-47cc-966e-754662fc9aa8"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("6f4c39e0-e97b-46fd-b7c0-f7b9580969ff"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 493, DateTimeKind.Local).AddTicks(3221),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f8693bc7-80a4-4b87-a300-e808b96a0983"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("e1faefc3-4f26-4c21-8d76-4df1cb74345b")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.Property<Guid>("UserPropertieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("TypeUserTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPropertieId");

                    b.HasIndex("TypeUserTypeId");

                    b.ToTable("UsersProperties");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersStatus", b =>
                {
                    b.Property<Guid>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserStatusId");

                    b.ToTable("UsersStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTokens", b =>
                {
                    b.Property<Guid>("UserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTokenId");

                    b.ToTable("UsersTokens");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTypes", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTypeId");

                    b.ToTable("UsersTypes");

                    b.HasData(
                        new
                        {
                            UserTypeId = new Guid("6a78ba23-f085-4485-a2b1-a26cf849f42e"),
                            Description = "usuário administrativo",
                            DtInsert = new DateTime(2021, 2, 25, 12, 50, 6, 492, DateTimeKind.Local).AddTicks(899),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.Systems", "System")
                        .WithMany()
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.UsersTypes", "Type")
                        .WithMany()
                        .HasForeignKey("TypeUserTypeId");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}

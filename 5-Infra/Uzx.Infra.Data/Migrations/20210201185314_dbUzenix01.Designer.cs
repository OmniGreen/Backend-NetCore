// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uzx.Infra.Data.Context;

namespace Uzx.Infra.Data.Migrations
{
    [DbContext(typeof(UzxBaseDbContext))]
    [Migration("20210201185314_dbUzenix01")]
    partial class dbUzenix01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Uzx.Domain.Core.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("MessageType")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationDate");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoredEvent");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Patio")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.AddressTypes", b =>
                {
                    b.Property<Guid>("AdressTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("AdressTypesId");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Agents", b =>
                {
                    b.Property<Guid>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Breeds", b =>
                {
                    b.Property<Guid>("BreedsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BreedsId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cids", b =>
                {
                    b.Property<Guid>("CidsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CidsId");

                    b.ToTable("Cids");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cities", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Clients", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Document1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Document2")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name2")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Person")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("37a8f659-bf71-4271-85c5-cd1447d37ef5"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 718, DateTimeKind.Local).AddTicks(3002),
                            IsActive = true,
                            IsAdmin = true,
                            IsDeleted = false,
                            Name1 = "Administrador Uzenix",
                            Name2 = "Admin",
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Person = "1",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsConfigurations", b =>
                {
                    b.Property<Guid>("ClientConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessPort")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("DataBaseIP")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DataBaseLogin")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DataBaseName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DataBasePassword")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FilePath")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCampaingSave")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelFields")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<bool>("enableSsl")
                        .HasColumnType("boolean");

                    b.Property<string>("smtpPass")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("smtpPort")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("smtpServer")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("smtpUser")
                        .HasColumnType("varchar(200)");

                    b.HasKey("ClientConfigurationId");

                    b.ToTable("ClientsConfigurations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsContacts", b =>
                {
                    b.Property<Guid>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactSector")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientContactId");

                    b.ToTable("ClientsContacts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsNewsletter", b =>
                {
                    b.Property<Guid>("ClientNewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientNewsletterId");

                    b.ToTable("ClientsNewsletter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsOperators", b =>
                {
                    b.Property<Guid>("ClientOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientOperatorId");

                    b.ToTable("ClientsOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.Property<Guid>("ClientSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientSystemId");

                    b.HasIndex("SystemId");

                    b.ToTable("ClientsSystems");

                    b.HasData(
                        new
                        {
                            ClientSystemId = new Guid("79aa661f-8295-44ff-8907-5035e8a224eb"),
                            ClientId = new Guid("37a8f659-bf71-4271-85c5-cd1447d37ef5"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(1543),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CompanyOperators", b =>
                {
                    b.Property<Guid>("CompanyOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyOperatorId");

                    b.ToTable("CompanyOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CostCenter", b =>
                {
                    b.Property<Guid>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Countries", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Departments", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Doctors", b =>
                {
                    b.Property<Guid>("DoctorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DoctorsId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Educations", b =>
                {
                    b.Property<Guid>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.FamilyType", b =>
                {
                    b.Property<Guid>("FamilyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FamilyTypeId");

                    b.ToTable("FamilyType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Functions", b =>
                {
                    b.Property<Guid>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsers", b =>
                {
                    b.Property<Guid>("GroupUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserId");

                    b.ToTable("GroupUsers");

                    b.HasData(
                        new
                        {
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(6740),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administradores",
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsersMenus", b =>
                {
                    b.Property<Guid>("GroupUserMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserMenuId");

                    b.ToTable("GroupUsersMenus");

                    b.HasData(
                        new
                        {
                            GroupUserMenuId = new Guid("69fe413b-c40b-43df-a5c9-8313a885a736"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4314),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("f9bf76a4-3d22-4aff-bec6-4e8ea0729b2f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4518),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5b31c8fe-33cd-44eb-8da8-719f0224c206"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("3bc4dba6-dc6e-40a4-b9c0-d298354da918"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4540),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d0f63e87-221a-40ef-83bc-1a5acab4c337"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("4123d725-6c83-474c-8a0f-19cb2caad5a9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4558),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("77435198-23ff-4a2d-810a-2ff68a648f0c"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("5b88d341-a20c-4b79-9df8-6eb966cd7e3e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4605),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fec00ccf-2f86-4016-b3e5-79cb7bb496c1"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("a5c82b2c-c369-4f87-8e58-3e1e386392d2"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4626),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("e00e9432-231b-401f-a031-745ac31cb733"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("9ed3c04d-5056-41da-9b35-1b2e93a29d41"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4644),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("3da018f3-d91f-49f1-af95-415be4305329"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("51585175-d0e0-4246-9263-e3cdf278f766"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4661),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f6ae5958-7fa4-4f16-89ef-bccdd7231d4f"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("345670d9-088f-4438-9792-87ab3c8d5e32"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4683),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("eba6f6a7-4603-43ef-b91f-f4dbe082f37c"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("c3b2dd53-a49c-4772-81c0-b47fe7ba49e8"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4702),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("59455475-488a-4edb-91c2-aa2ac937c8e9"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("6a06ba84-557a-42f0-a323-ff486966ae38"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4720),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5a3d63e3-02cd-4c59-a71a-cbe4b3601c3a"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("064a7434-28d8-4697-a9e7-52ab22c01f16"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4737),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2719eae5-4ad5-4c99-af55-28198485502f"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("19dd981c-3c7e-47a4-9d68-db5a47f5d52f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4754),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("cc7c7f72-3489-4010-a966-9748d9d091e1"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("2f465dfe-3a6c-406e-a405-2113b2aa11a4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4772),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("a86139fd-8f06-4088-92cb-192eba775d42"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("c3b9095e-fe10-4648-b4c5-6cf145e0e7d2"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4789),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("10236f58-6b0c-4c98-a1f2-88752f838521"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("33404e06-3426-4c5c-8f26-bc6c93c9bfd6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4807),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("55de40d5-958f-4e81-934a-8757a088343a"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("8fb18f8b-c07a-4399-9ced-0630644318b5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4826),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4e1d37fe-98f7-4adc-84a2-f8d3364b9823"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("1848adbe-0e45-44fd-a4b7-1cf7cd669843"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4845),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2b9e329c-701e-4f0b-8cda-cbdd93295d7d"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("2eb562e6-c21e-4326-bbba-15196cdb4540"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4862),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("193398b4-a6a2-446a-bf56-a179dbcb940f"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("7904522d-f9ca-4735-9495-aec66a31ff7d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4880),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("98b041df-82a2-4000-9cf5-faba53a7a4a4"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("e0d70980-c014-4f54-9676-71bccf1009ab"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4918),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("201810b9-0d6f-4d68-ba57-1427fcc916fa"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("b27ff508-2c0d-453c-9b3c-63688388759f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(4936),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("dab7e315-73d9-45ec-8a98-acecd662bab8"),
                            R = true,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            U = true
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Higher", b =>
                {
                    b.Property<Guid>("HigherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HigherId");

                    b.ToTable("Higher");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Hospitals", b =>
                {
                    b.Property<Guid>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Kinship", b =>
                {
                    b.Property<Guid>("KinshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("KinshipId");

                    b.ToTable("Kinship");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Languages", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = new Guid("5349fff1-bf54-46ed-a5f4-36406f6a7ef5"),
                            Alt = "Idioma do país Brasil",
                            Country = "Brasil",
                            Description = "Idioma em Portugues Brasileiro",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(3628),
                            FileName = "ptbr.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Portugues",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("b2df024f-08f3-4c1d-a290-913477944a28"),
                            Alt = "Idioma do país EUA",
                            Country = "EUA",
                            Description = "Idioma em Inglês Norte Americano",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(5604),
                            FileName = "us.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inglês",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("9cd3f2a6-7af4-451e-bc2f-c4742ed407cf"),
                            Alt = "Idioma do país Espanha.",
                            Country = "Espanha",
                            Description = "Idioma em Espanhol da Espanha.",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(5689),
                            FileName = "es.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Espanhol",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MaritalStatus", b =>
                {
                    b.Property<Guid>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Menus", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("MenuIdPai")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenusTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Target")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            Alt = "Menu de Cadastros",
                            Description = "Menu para realizar diversos cadastros",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(9119),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("00000000-0000-0000-0000-000000000000"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastros",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("5b31c8fe-33cd-44eb-8da8-719f0224c206"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(852),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operadoras",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("d0f63e87-221a-40ef-83bc-1a5acab4c337"),
                            Alt = "Listagem de Operadoras",
                            Description = "Realiza a busca de Operadoras",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(930),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/list",
                            MenuIdPai = new Guid("5b31c8fe-33cd-44eb-8da8-719f0224c206"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("77435198-23ff-4a2d-810a-2ff68a648f0c"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(997),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/details",
                            MenuIdPai = new Guid("5b31c8fe-33cd-44eb-8da8-719f0224c206"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("fec00ccf-2f86-4016-b3e5-79cb7bb496c1"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1090),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("e00e9432-231b-401f-a031-745ac31cb733"),
                            Alt = "Listagem de Usuarios",
                            Description = "Realiza a busca de Usuarios",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1130),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/list",
                            MenuIdPai = new Guid("fec00ccf-2f86-4016-b3e5-79cb7bb496c1"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("3da018f3-d91f-49f1-af95-415be4305329"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1170),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/details",
                            MenuIdPai = new Guid("fec00ccf-2f86-4016-b3e5-79cb7bb496c1"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("f6ae5958-7fa4-4f16-89ef-bccdd7231d4f"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1206),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menus",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("eba6f6a7-4603-43ef-b91f-f4dbe082f37c"),
                            Alt = "Listagem de Menus",
                            Description = "Realiza a busca de Menus",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1243),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/list",
                            MenuIdPai = new Guid("f6ae5958-7fa4-4f16-89ef-bccdd7231d4f"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("59455475-488a-4edb-91c2-aa2ac937c8e9"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1282),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/details",
                            MenuIdPai = new Guid("f6ae5958-7fa4-4f16-89ef-bccdd7231d4f"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("5a3d63e3-02cd-4c59-a71a-cbe4b3601c3a"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1344),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Clientes",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2719eae5-4ad5-4c99-af55-28198485502f"),
                            Alt = "Listagem de Clientes",
                            Description = "Realiza a busca de Clientes",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1381),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/list",
                            MenuIdPai = new Guid("5a3d63e3-02cd-4c59-a71a-cbe4b3601c3a"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("cc7c7f72-3489-4010-a966-9748d9d091e1"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1418),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/details",
                            MenuIdPai = new Guid("5a3d63e3-02cd-4c59-a71a-cbe4b3601c3a"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("a86139fd-8f06-4088-92cb-192eba775d42"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1454),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Idiomas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("10236f58-6b0c-4c98-a1f2-88752f838521"),
                            Alt = "Listagem de Idiomas",
                            Description = "Realiza a busca de Idiomas",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1492),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/list",
                            MenuIdPai = new Guid("a86139fd-8f06-4088-92cb-192eba775d42"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("55de40d5-958f-4e81-934a-8757a088343a"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1528),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/details",
                            MenuIdPai = new Guid("a86139fd-8f06-4088-92cb-192eba775d42"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("4e1d37fe-98f7-4adc-84a2-f8d3364b9823"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1566),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sistemas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2b9e329c-701e-4f0b-8cda-cbdd93295d7d"),
                            Alt = "Listagem de Sistemas",
                            Description = "Realiza a busca de Sistemas",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1625),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/list",
                            MenuIdPai = new Guid("4e1d37fe-98f7-4adc-84a2-f8d3364b9823"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("193398b4-a6a2-446a-bf56-a179dbcb940f"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1663),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/details",
                            MenuIdPai = new Guid("4e1d37fe-98f7-4adc-84a2-f8d3364b9823"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("98b041df-82a2-4000-9cf5-faba53a7a4a4"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1699),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Grupo de Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("201810b9-0d6f-4d68-ba57-1427fcc916fa"),
                            Alt = "Listagem de Grupo de Usuarios",
                            Description = "Realiza a busca de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1735),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/list",
                            MenuIdPai = new Guid("98b041df-82a2-4000-9cf5-faba53a7a4a4"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("dab7e315-73d9-45ec-8a98-acecd662bab8"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1771),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/details",
                            MenuIdPai = new Guid("98b041df-82a2-4000-9cf5-faba53a7a4a4"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MenusTypes", b =>
                {
                    b.Property<Guid>("MenusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("MenusTypeId");

                    b.ToTable("MenusType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Offices", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Plans", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CompanyOperatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Procedures", b =>
                {
                    b.Property<Guid>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Providers", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Responsabilities", b =>
                {
                    b.Property<Guid>("ResponsabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ResponsabilityId");

                    b.ToTable("Resposabilities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Shifts", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Specialities", b =>
                {
                    b.Property<Guid>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.States", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.StatusSolicitation", b =>
                {
                    b.Property<Guid>("SatusSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SatusSolicitationId");

                    b.ToTable("StatusSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Systems", b =>
                {
                    b.Property<Guid>("SystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemId");

                    b.ToTable("Systems");

                    b.HasData(
                        new
                        {
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            Alt = "Sistema Administrativo",
                            Description = "Sistema Administrativo",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 719, DateTimeKind.Local).AddTicks(9716),
                            Image = "",
                            IsActive = true,
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsLanguages", b =>
                {
                    b.Property<Guid>("SystemLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("SystemLanguageId");

                    b.ToTable("SystemsLanguages");

                    b.HasData(
                        new
                        {
                            SystemLanguageId = new Guid("716c7e89-b5b2-42d5-aab2-c0841ca039ba"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(5409),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("5349fff1-bf54-46ed-a5f4-36406f6a7ef5"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("97667267-f8e8-4cbc-acab-38aa9ceb8017"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(5668),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("b2df024f-08f3-4c1d-a290-913477944a28"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("82629ade-64e4-4c27-b24c-fc225bf30a5a"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 720, DateTimeKind.Local).AddTicks(5708),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("9cd3f2a6-7af4-451e-bc2f-c4742ed407cf"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsMenus", b =>
                {
                    b.Property<Guid>("SystemMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemMenuId");

                    b.ToTable("SystemsMenus");

                    b.HasData(
                        new
                        {
                            SystemMenuId = new Guid("1d20d558-2c89-4932-82ce-636c902a74fd"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(394),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("0e77bff5-18a0-4dbf-bd2f-0f3847f80eed"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(899),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5b31c8fe-33cd-44eb-8da8-719f0224c206"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("9ceae6a7-6041-442f-9e41-7838a728eb8e"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(948),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d0f63e87-221a-40ef-83bc-1a5acab4c337"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("f892c909-f996-41bf-94f5-0e7429ffc329"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1016),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("77435198-23ff-4a2d-810a-2ff68a648f0c"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("873cac77-417d-4183-935e-ced1bf979bf8"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1110),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fec00ccf-2f86-4016-b3e5-79cb7bb496c1"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("6cb4f341-c29b-4703-b6c5-2ae508b96f89"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1148),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("e00e9432-231b-401f-a031-745ac31cb733"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("730c9a29-211b-42cc-a72c-b508c7cdd873"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1187),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("3da018f3-d91f-49f1-af95-415be4305329"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("b676dd5a-b94f-48c1-951f-eb06dce438cb"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1223),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f6ae5958-7fa4-4f16-89ef-bccdd7231d4f"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("ef57f52e-692a-41a7-b9be-8f9293564942"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1262),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("eba6f6a7-4603-43ef-b91f-f4dbe082f37c"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("24b1764f-5c54-405f-af3a-07e81a640b00"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1299),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("59455475-488a-4edb-91c2-aa2ac937c8e9"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("b6f0f2b5-3f1e-43a1-b1f9-0146337e5d8c"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1362),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5a3d63e3-02cd-4c59-a71a-cbe4b3601c3a"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("c3cb66c7-dbef-4b20-8187-a7b84b2838ef"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1399),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2719eae5-4ad5-4c99-af55-28198485502f"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("678ec6f0-f33d-4006-b4ac-9e656dccaf38"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1436),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("cc7c7f72-3489-4010-a966-9748d9d091e1"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("6bb1852f-420a-4303-868e-0004b192c9c0"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1472),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("a86139fd-8f06-4088-92cb-192eba775d42"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("d7c9afa5-4936-45f4-9846-8d77e4d0a050"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1510),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("10236f58-6b0c-4c98-a1f2-88752f838521"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("462cf482-a45b-4fd5-b296-6d41cf868855"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1546),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("55de40d5-958f-4e81-934a-8757a088343a"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("0dd69290-06a5-49cd-96ae-3f3a687c2c08"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1604),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4e1d37fe-98f7-4adc-84a2-f8d3364b9823"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("93ed5480-e4cd-4743-b431-d1772900fd05"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1642),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2b9e329c-701e-4f0b-8cda-cbdd93295d7d"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("921d94d4-9fdc-43d8-8f71-38d1f1349d7e"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1681),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("193398b4-a6a2-446a-bf56-a179dbcb940f"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("84dcdab6-cb3e-4d65-af96-c872005bdd1d"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1717),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("98b041df-82a2-4000-9cf5-faba53a7a4a4"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("5c65b4d8-7819-403d-8505-3b7b9a1deb07"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1753),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("201810b9-0d6f-4d68-ba57-1427fcc916fa"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("0ee387c0-c8b5-4dc1-a020-e00ab6ef9354"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(1789),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("dab7e315-73d9-45ec-8a98-acecd662bab8"),
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TransportLines", b =>
                {
                    b.Property<Guid>("TransportLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportLineId");

                    b.ToTable("TransportLines");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Transports", b =>
                {
                    b.Property<Guid>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Treatments", b =>
                {
                    b.Property<Guid>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TreatmentId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeProviders", b =>
                {
                    b.Property<Guid>("TypeProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeProviderId");

                    b.ToTable("TypeProviders");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeSolicitation", b =>
                {
                    b.Property<Guid>("TypeSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeSolicitationId");

                    b.ToTable("TypeSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeTransports", b =>
                {
                    b.Property<Guid>("TypeTransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeTransportId");

                    b.ToTable("TypeTransports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Unions", b =>
                {
                    b.Property<Guid>("UnionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UnionId");

                    b.ToTable("Unions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("a2758512-8943-422c-a4e7-b330e063b83d"),
                            ClientId = new Guid("37a8f659-bf71-4271-85c5-cd1447d37ef5"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(7441),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrador",
                            Surname = "Master",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersAccess", b =>
                {
                    b.Property<Guid>("UserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DTVerify")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserAccessId");

                    b.ToTable("UsersAccess");

                    b.HasData(
                        new
                        {
                            UserAccessId = new Guid("de433980-6f0a-4016-a49c-c98c911233ac"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(8938),
                            IsActive = true,
                            IsDeleted = false,
                            IsVerify = true,
                            Login = "user@uzenix.com",
                            Password = "AO5+45YXX6IBTW3FF/sVqz7BxjClYY3xE0qkWef8lLgJOnM7Rk6cUiF3t8v5huFcWw==",
                            UserId = new Guid("a2758512-8943-422c-a4e7-b330e063b83d")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissions", b =>
                {
                    b.Property<Guid>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionId");

                    b.ToTable("UsersPermissions");

                    b.HasData(
                        new
                        {
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8"),
                            ClientId = new Guid("37a8f659-bf71-4271-85c5-cd1447d37ef5"),
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(965),
                            GroupUserId = new Guid("bc088fd7-e4ab-4908-8038-24bb63252b31"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("5326b5cd-733c-472c-8ec4-e8f845a645a7"),
                            UserId = new Guid("a2758512-8943-422c-a4e7-b330e063b83d")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissionsMenus", b =>
                {
                    b.Property<Guid>("UserPermissionMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserPermissionId")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionMenuId");

                    b.ToTable("UsersPermissionsMenus");

                    b.HasData(
                        new
                        {
                            UserPermissionMenuId = new Guid("aceb1a9b-3040-4704-bf84-9855e42f4940"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3098),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fc84a50c-8e04-4b5c-b793-deac99079c87"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ff23db77-1308-478c-93b5-a5752c476f3e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3285),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5b31c8fe-33cd-44eb-8da8-719f0224c206"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("89936aa7-5b67-4226-a43f-add7b62312dd"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3308),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d0f63e87-221a-40ef-83bc-1a5acab4c337"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("db07b235-05a5-4866-8a0b-b3b01c7c87ca"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3326),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("77435198-23ff-4a2d-810a-2ff68a648f0c"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("265d075e-8119-4686-b6d5-47d4dd6107ed"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3345),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fec00ccf-2f86-4016-b3e5-79cb7bb496c1"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("708b7b5a-7878-4a8d-be79-8258a1dbdc75"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3365),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("e00e9432-231b-401f-a031-745ac31cb733"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("9e378bac-05f9-45af-b306-997ad0793ec5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3388),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("3da018f3-d91f-49f1-af95-415be4305329"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("3e4e869e-a195-46e5-85b0-fc313a474895"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3406),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f6ae5958-7fa4-4f16-89ef-bccdd7231d4f"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("5d4e1d7c-0d0b-4983-95a3-1387c235000a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3424),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("eba6f6a7-4603-43ef-b91f-f4dbe082f37c"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("a2dec382-34f2-457e-83d5-ab1c2a7eb872"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3472),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("59455475-488a-4edb-91c2-aa2ac937c8e9"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ac408a23-6ff2-4994-a473-c3d45bd94fa3"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3491),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5a3d63e3-02cd-4c59-a71a-cbe4b3601c3a"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("113c8551-7fb3-454d-aadd-16719b82539d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3508),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2719eae5-4ad5-4c99-af55-28198485502f"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("c17ded48-12c0-486c-8e44-9ed85f250293"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3526),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("cc7c7f72-3489-4010-a966-9748d9d091e1"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("c98fa626-2e3f-4c41-8155-40db09f10d3e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3544),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("a86139fd-8f06-4088-92cb-192eba775d42"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("4c3f245c-e26a-435a-b096-8d4099de98a3"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3564),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("10236f58-6b0c-4c98-a1f2-88752f838521"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("91d5199a-ea15-44ae-882f-14047f06cee7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3582),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("55de40d5-958f-4e81-934a-8757a088343a"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("8bae82f2-5f7a-48a1-84cf-a1f807f6bfa2"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3599),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4e1d37fe-98f7-4adc-84a2-f8d3364b9823"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("eca942b4-f1d3-4bac-8321-e2e87fb00327"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3618),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2b9e329c-701e-4f0b-8cda-cbdd93295d7d"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("b426c52e-ffb1-4ecc-afad-f6b2bf596f6b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3636),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("193398b4-a6a2-446a-bf56-a179dbcb940f"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("dc06614a-5299-4463-a049-dc02923d9a3c"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3654),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("98b041df-82a2-4000-9cf5-faba53a7a4a4"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("13eb6098-a63f-467c-9e6b-026f04580b73"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3672),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("201810b9-0d6f-4d68-ba57-1427fcc916fa"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("99be9aba-343b-450e-be7a-f6722cdcf32a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 722, DateTimeKind.Local).AddTicks(3689),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("dab7e315-73d9-45ec-8a98-acecd662bab8"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5213a642-6b64-4ddb-bed2-e70230c30ef8")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.Property<Guid>("UserPropertieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("TypeUserTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPropertieId");

                    b.HasIndex("TypeUserTypeId");

                    b.ToTable("UsersProperties");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersStatus", b =>
                {
                    b.Property<Guid>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserStatusId");

                    b.ToTable("UsersStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTokens", b =>
                {
                    b.Property<Guid>("UserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTokenId");

                    b.ToTable("UsersTokens");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTypes", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTypeId");

                    b.ToTable("UsersTypes");

                    b.HasData(
                        new
                        {
                            UserTypeId = new Guid("2a517ce9-439d-4c22-a716-c4961352169a"),
                            Description = "usuário administrativo",
                            DtInsert = new DateTime(2021, 2, 1, 15, 53, 13, 721, DateTimeKind.Local).AddTicks(5975),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.Systems", "System")
                        .WithMany()
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.UsersTypes", "Type")
                        .WithMany()
                        .HasForeignKey("TypeUserTypeId");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}

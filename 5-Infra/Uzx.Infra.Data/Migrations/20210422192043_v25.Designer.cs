// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uzx.Infra.Data.Context;

namespace Uzx.Infra.Data.Migrations
{
    [DbContext(typeof(UzxBaseDbContext))]
    [Migration("20210422192043_v25")]
    partial class v25
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Uzx.Domain.Core.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("MessageType")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationDate");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoredEvent");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Patio")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.AddressTypes", b =>
                {
                    b.Property<Guid>("AdressTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("AdressTypesId");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Agents", b =>
                {
                    b.Property<Guid>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Banners", b =>
                {
                    b.Property<Guid>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NameBanner")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Page")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Breeds", b =>
                {
                    b.Property<Guid>("BreedsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BreedsId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Categories", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDestaque")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvent")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cids", b =>
                {
                    b.Property<Guid>("CidsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CidsId");

                    b.ToTable("Cids");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cities", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Clients", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Document1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Document2")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name2")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Person")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("14625b02-62cf-4810-8d45-8d03e869d100"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 235, DateTimeKind.Local).AddTicks(1070),
                            IsActive = true,
                            IsAdmin = true,
                            IsDeleted = false,
                            Name1 = "Administrador Uzenix",
                            Name2 = "Admin",
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Person = "1",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsConfigurations", b =>
                {
                    b.Property<Guid>("ClientConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessPort")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("DataBaseIP")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseLogin")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseName")
                        .HasColumnType("text");

                    b.Property<string>("DataBasePassword")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCampaingSave")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelFields")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<bool>("enableSsl")
                        .HasColumnType("boolean");

                    b.Property<string>("smtpPass")
                        .HasColumnType("text");

                    b.Property<string>("smtpPort")
                        .HasColumnType("text");

                    b.Property<string>("smtpServer")
                        .HasColumnType("text");

                    b.Property<string>("smtpUser")
                        .HasColumnType("text");

                    b.HasKey("ClientConfigurationId");

                    b.ToTable("ClientsConfigurations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsContacts", b =>
                {
                    b.Property<Guid>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactSector")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientContactId");

                    b.ToTable("ClientsContacts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsNewsletter", b =>
                {
                    b.Property<Guid>("ClientNewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientNewsletterId");

                    b.ToTable("ClientsNewsletter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsOperators", b =>
                {
                    b.Property<Guid>("ClientOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientOperatorId");

                    b.ToTable("ClientsOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.Property<Guid>("ClientSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientSystemId");

                    b.HasIndex("SystemId");

                    b.ToTable("ClientsSystems");

                    b.HasData(
                        new
                        {
                            ClientSystemId = new Guid("83e7f151-664a-469e-b0d8-a5260e5d2e20"),
                            ClientId = new Guid("14625b02-62cf-4810-8d45-8d03e869d100"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 238, DateTimeKind.Local).AddTicks(1100),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CompanyOperators", b =>
                {
                    b.Property<Guid>("CompanyOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyOperatorId");

                    b.ToTable("CompanyOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CostCenter", b =>
                {
                    b.Property<Guid>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Countries", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Coupons", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(200)");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Customers", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AddressIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Amenities")
                        .HasColumnType("text");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EmailIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGhost")
                        .HasColumnType("boolean");

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("LogoIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("NeighborhoodId")
                        .HasColumnType("uuid");

                    b.Property<string>("PaymentMethods")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberIsVisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("PhoneNumberIsVisible2")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SiteIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Specialties")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("Timetable")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSiteId")
                        .HasColumnType("uuid");

                    b.Property<string>("VideoLink")
                        .HasColumnType("text");

                    b.Property<string>("Whats")
                        .HasColumnType("text");

                    b.Property<bool>("WhatsIsVisible")
                        .HasColumnType("boolean");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersBanners", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BannerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersBanners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersCoupons", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersCoupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersEvents", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersEvents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersGhost", b =>
                {
                    b.Property<Guid>("CustomerGhostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AddressIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Amenities")
                        .HasColumnType("text");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeniedDescription")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EmailIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGhost")
                        .HasColumnType("boolean");

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("LogoIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("NeighborhoodId")
                        .HasColumnType("uuid");

                    b.Property<string>("PaymentMethods")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberIsVisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("PhoneNumberIsVisible2")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SiteIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Specialties")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("Timetable")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSiteId")
                        .HasColumnType("uuid");

                    b.Property<string>("VideoLink")
                        .HasColumnType("text");

                    b.Property<string>("Whats")
                        .HasColumnType("text");

                    b.Property<bool>("WhatsIsVisible")
                        .HasColumnType("boolean");

                    b.HasKey("CustomerGhostId");

                    b.ToTable("CustomersGhost");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSalePlans", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSocialMedias", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Departments", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Doctors", b =>
                {
                    b.Property<Guid>("DoctorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DoctorsId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Educations", b =>
                {
                    b.Property<Guid>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Events", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("CompraOnline")
                        .HasColumnType("text");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Site")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("Whats")
                        .HasColumnType("text");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.EventsSocialMedias", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EventId");

                    b.ToTable("EventsSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.FamilyType", b =>
                {
                    b.Property<Guid>("FamilyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FamilyTypeId");

                    b.ToTable("FamilyType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Functions", b =>
                {
                    b.Property<Guid>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsers", b =>
                {
                    b.Property<Guid>("GroupUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserId");

                    b.ToTable("GroupUsers");

                    b.HasData(
                        new
                        {
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(115),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administradores",
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsersMenus", b =>
                {
                    b.Property<Guid>("GroupUserMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserMenuId");

                    b.ToTable("GroupUsersMenus");

                    b.HasData(
                        new
                        {
                            GroupUserMenuId = new Guid("0f4f6666-2fb1-4b0c-920b-0e47fb085f11"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3064),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("52a5a627-40b1-47ee-8fdc-54c7389d10eb"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3382),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("414b2ed7-bcca-4f6e-b305-062c68877bfc"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("5233fb2d-8e22-4eef-89e5-dc59882cf42d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3426),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6958b355-8f77-40d2-84d4-dfeed9cdb0e3"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("cbf6e08c-0146-4c83-b79e-63aa06e5f739"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3451),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d3e31620-2cbb-46b3-8550-202abacb0606"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("889c5e06-82b1-4507-a266-f2a91b50af46"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3473),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("27bd13e1-36f4-497a-89ca-c49a183bfac3"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("698feb2a-0a6f-4593-b9f0-0210df5ee0ab"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3498),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("faa6e48f-fc84-498c-a2df-7658f0e2b20c"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("59451cd9-c085-4ca3-bb25-78ce66e8eea4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3520),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1f2bd79e-66db-4ebe-890b-6417092fcdcd"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("92495ed9-f1eb-4813-bb18-f648be908390"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3542),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("699cec88-b98a-4547-b9a5-e06e2b6ce8bc"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("d8721517-b63f-4d22-a1a0-56941e333e11"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3562),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f97d203e-7cc1-4c0e-b098-6d99ef8826e5"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("9f215775-6144-4df2-9c7d-e01f381cb781"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3633),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b09db71e-e697-4169-ad3a-ff3ce4dd7c53"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("8792684a-2405-4939-a67b-ce8e0be69994"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3661),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4f130b00-f074-4613-bc2d-9dacfcc33c41"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("38fdba99-4591-4abd-aec7-289c34d7fb06"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3682),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0f17ac4c-8796-43c2-8d65-7fab6bd760b4"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("05e6c34f-4596-4bd9-943e-3a546b47b535"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3703),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9b8bb812-d8f0-4786-9b42-4ceafd2e1941"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("f0e925a2-45d2-4ab2-95bf-3d0ceb935a80"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3724),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("bc0bb622-25ea-45af-a5db-e06512ce9c82"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("334096b4-d30b-4564-b642-916e44c99f48"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3744),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4d301736-a1d4-4134-9f88-57830514d627"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("1288efae-fb92-4370-bc91-db05d023b07f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3765),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b3d94456-6c56-4343-b483-af199326b2a5"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("76c08676-9717-4ea2-b7f2-00cdc9438879"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3786),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("df7cfbbe-905c-4444-a16d-cc840f552bd9"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("584304f9-1990-480f-a918-dfe0e718b5e4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3808),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("863ec611-e6f1-4c9b-9e2a-f5d0cd366cca"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("3e37266e-481c-4b06-a9ee-2abfab5f48ad"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3832),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("899c332a-11d2-4651-ae68-cb43c071af7d"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("05cd35ab-16b1-440a-82ec-e560d6174170"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3854),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("339c3306-462f-4395-9711-06d0d8bf8713"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("a6112c57-bc82-4f97-bc50-e3034f2d8ca7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3874),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c86cace6-30f1-4c7e-864e-498b24fe0b7d"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("88795365-a81b-463b-b97a-13745df5f376"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(3895),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5ba1028e-0a5d-489d-86f5-97bcfb1fccaa"),
                            R = true,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            U = true
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Higher", b =>
                {
                    b.Property<Guid>("HigherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HigherId");

                    b.ToTable("Higher");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Hospitals", b =>
                {
                    b.Property<Guid>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Kinship", b =>
                {
                    b.Property<Guid>("KinshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("KinshipId");

                    b.ToTable("Kinship");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Languages", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = new Guid("d8eeae24-bbec-4edf-8e11-13fc01548cc0"),
                            Alt = "Idioma do país Brasil",
                            Country = "Brasil",
                            Description = "Idioma em Portugues Brasileiro",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 238, DateTimeKind.Local).AddTicks(4842),
                            FileName = "ptbr.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Portugues",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("e6711223-7778-417e-a13a-a20e306600b4"),
                            Alt = "Idioma do país EUA",
                            Country = "EUA",
                            Description = "Idioma em Inglês Norte Americano",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 238, DateTimeKind.Local).AddTicks(8246),
                            FileName = "us.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inglês",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("e6e69c03-8f1c-414f-bf6c-cfe4b979111e"),
                            Alt = "Idioma do país Espanha.",
                            Country = "Espanha",
                            Description = "Idioma em Espanhol da Espanha.",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 238, DateTimeKind.Local).AddTicks(8471),
                            FileName = "es.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Espanhol",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MaritalStatus", b =>
                {
                    b.Property<Guid>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Menus", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("MenuIdPai")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenusTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Target")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            Alt = "Menu de Cadastros",
                            Description = "Menu para realizar diversos cadastros",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(4171),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("00000000-0000-0000-0000-000000000000"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastros",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("414b2ed7-bcca-4f6e-b305-062c68877bfc"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(6960),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operadoras",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("6958b355-8f77-40d2-84d4-dfeed9cdb0e3"),
                            Alt = "Listagem de Operadoras",
                            Description = "Realiza a busca de Operadoras",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7069),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/list",
                            MenuIdPai = new Guid("414b2ed7-bcca-4f6e-b305-062c68877bfc"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("d3e31620-2cbb-46b3-8550-202abacb0606"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7121),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/details",
                            MenuIdPai = new Guid("414b2ed7-bcca-4f6e-b305-062c68877bfc"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("27bd13e1-36f4-497a-89ca-c49a183bfac3"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7248),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("faa6e48f-fc84-498c-a2df-7658f0e2b20c"),
                            Alt = "Listagem de Usuarios",
                            Description = "Realiza a busca de Usuarios",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7302),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/list",
                            MenuIdPai = new Guid("27bd13e1-36f4-497a-89ca-c49a183bfac3"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("1f2bd79e-66db-4ebe-890b-6417092fcdcd"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7405),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/details",
                            MenuIdPai = new Guid("27bd13e1-36f4-497a-89ca-c49a183bfac3"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("699cec88-b98a-4547-b9a5-e06e2b6ce8bc"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7455),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menus",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("f97d203e-7cc1-4c0e-b098-6d99ef8826e5"),
                            Alt = "Listagem de Menus",
                            Description = "Realiza a busca de Menus",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7499),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/list",
                            MenuIdPai = new Guid("699cec88-b98a-4547-b9a5-e06e2b6ce8bc"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("b09db71e-e697-4169-ad3a-ff3ce4dd7c53"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7545),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/details",
                            MenuIdPai = new Guid("699cec88-b98a-4547-b9a5-e06e2b6ce8bc"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("4f130b00-f074-4613-bc2d-9dacfcc33c41"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7587),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Clientes",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("0f17ac4c-8796-43c2-8d65-7fab6bd760b4"),
                            Alt = "Listagem de Clientes",
                            Description = "Realiza a busca de Clientes",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7634),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/list",
                            MenuIdPai = new Guid("4f130b00-f074-4613-bc2d-9dacfcc33c41"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("9b8bb812-d8f0-4786-9b42-4ceafd2e1941"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7784),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/details",
                            MenuIdPai = new Guid("4f130b00-f074-4613-bc2d-9dacfcc33c41"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("bc0bb622-25ea-45af-a5db-e06512ce9c82"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8118),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Idiomas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("4d301736-a1d4-4134-9f88-57830514d627"),
                            Alt = "Listagem de Idiomas",
                            Description = "Realiza a busca de Idiomas",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8164),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/list",
                            MenuIdPai = new Guid("bc0bb622-25ea-45af-a5db-e06512ce9c82"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("b3d94456-6c56-4343-b483-af199326b2a5"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8210),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/details",
                            MenuIdPai = new Guid("bc0bb622-25ea-45af-a5db-e06512ce9c82"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("df7cfbbe-905c-4444-a16d-cc840f552bd9"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8257),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sistemas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("863ec611-e6f1-4c9b-9e2a-f5d0cd366cca"),
                            Alt = "Listagem de Sistemas",
                            Description = "Realiza a busca de Sistemas",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8307),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/list",
                            MenuIdPai = new Guid("df7cfbbe-905c-4444-a16d-cc840f552bd9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("899c332a-11d2-4651-ae68-cb43c071af7d"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8350),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/details",
                            MenuIdPai = new Guid("df7cfbbe-905c-4444-a16d-cc840f552bd9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("339c3306-462f-4395-9711-06d0d8bf8713"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8447),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Grupo de Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c86cace6-30f1-4c7e-864e-498b24fe0b7d"),
                            Alt = "Listagem de Grupo de Usuarios",
                            Description = "Realiza a busca de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8492),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/list",
                            MenuIdPai = new Guid("339c3306-462f-4395-9711-06d0d8bf8713"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("5ba1028e-0a5d-489d-86f5-97bcfb1fccaa"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8538),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/details",
                            MenuIdPai = new Guid("339c3306-462f-4395-9711-06d0d8bf8713"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MenusTypes", b =>
                {
                    b.Property<Guid>("MenusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("MenusTypeId");

                    b.ToTable("MenusType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Neighborhoods", b =>
                {
                    b.Property<Guid>("NeighborhoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("NeighborhoodId");

                    b.ToTable("Neighborhoods");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Offices", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.PaymentMethods", b =>
                {
                    b.Property<Guid>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Plans", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CompanyOperatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Procedures", b =>
                {
                    b.Property<Guid>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Providers", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Responsabilities", b =>
                {
                    b.Property<Guid>("ResponsabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ResponsabilityId");

                    b.ToTable("Resposabilities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SalePlans", b =>
                {
                    b.Property<Guid>("SalePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DurationMounth")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanner")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoupons")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDestaque")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvents")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGuia")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SalePlanId");

                    b.ToTable("SalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Shifts", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SocialMedias", b =>
                {
                    b.Property<Guid>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SocialMediaId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Specialities", b =>
                {
                    b.Property<Guid>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.States", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.StatusSolicitation", b =>
                {
                    b.Property<Guid>("SatusSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SatusSolicitationId");

                    b.ToTable("StatusSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Systems", b =>
                {
                    b.Property<Guid>("SystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemId");

                    b.ToTable("Systems");

                    b.HasData(
                        new
                        {
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            Alt = "Sistema Administrativo",
                            Description = "Sistema Administrativo",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 237, DateTimeKind.Local).AddTicks(8214),
                            Image = "",
                            IsActive = true,
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsLanguages", b =>
                {
                    b.Property<Guid>("SystemLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("SystemLanguageId");

                    b.ToTable("SystemsLanguages");

                    b.HasData(
                        new
                        {
                            SystemLanguageId = new Guid("cdd75575-1b38-4897-9839-e6a68a3d21f2"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 238, DateTimeKind.Local).AddTicks(7942),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("d8eeae24-bbec-4edf-8e11-13fc01548cc0"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("40d3bafc-adfd-4189-8be9-415039538d46"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 238, DateTimeKind.Local).AddTicks(8349),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("e6711223-7778-417e-a13a-a20e306600b4"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("afcd707d-019a-443a-8f1f-1ef9de3a265d"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 238, DateTimeKind.Local).AddTicks(8512),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("e6e69c03-8f1c-414f-bf6c-cfe4b979111e"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsMenus", b =>
                {
                    b.Property<Guid>("SystemMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemMenuId");

                    b.ToTable("SystemsMenus");

                    b.HasData(
                        new
                        {
                            SystemMenuId = new Guid("c1ecca0c-cca6-44a3-9522-9b19f39be3f2"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(6239),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8cf381d7-598b-4960-8152-7ffa219fe66e"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7029),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("414b2ed7-bcca-4f6e-b305-062c68877bfc"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("2bc103b7-c69e-41c1-94f4-9e50f3dadc19"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7091),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6958b355-8f77-40d2-84d4-dfeed9cdb0e3"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("ecacd594-63e8-4386-bdbe-847d4304e868"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7142),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d3e31620-2cbb-46b3-8550-202abacb0606"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("668cf82f-fed9-4fe6-96d3-36780b4f5e82"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7276),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("27bd13e1-36f4-497a-89ca-c49a183bfac3"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8281576d-1c33-40a7-89cd-f2634e32000c"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7377),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("faa6e48f-fc84-498c-a2df-7658f0e2b20c"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("f7ee741a-fe30-4154-b3b8-8be78b9878e3"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7426),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1f2bd79e-66db-4ebe-890b-6417092fcdcd"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("c43a9a3b-3bd5-48ab-9604-f16aca670ee9"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7475),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("699cec88-b98a-4547-b9a5-e06e2b6ce8bc"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("f8606d86-bf91-41ef-9d74-43672af7cc25"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7521),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f97d203e-7cc1-4c0e-b098-6d99ef8826e5"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("6e1fef9e-c5a3-4559-92cf-015dc9f8ec43"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7565),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b09db71e-e697-4169-ad3a-ff3ce4dd7c53"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("53756d44-a100-4280-a104-c443d26da9cb"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7608),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4f130b00-f074-4613-bc2d-9dacfcc33c41"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("708b35a3-3c2a-4a90-9710-4f2d92b3085a"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(7742),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0f17ac4c-8796-43c2-8d65-7fab6bd760b4"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("293c53b8-30e7-4c9d-824a-f33c5d53bc94"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8088),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9b8bb812-d8f0-4786-9b42-4ceafd2e1941"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("d49018d9-da74-4d87-ad10-60b9a3c759e2"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8140),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("bc0bb622-25ea-45af-a5db-e06512ce9c82"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("e98bbe18-91ea-47a0-b5a4-fb82a2ed1e5b"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8184),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4d301736-a1d4-4134-9f88-57830514d627"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("bad19f53-02fa-441d-be60-71cafd11866d"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8230),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b3d94456-6c56-4343-b483-af199326b2a5"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("04b795ce-e9a4-4b02-899a-31134ec496ce"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8280),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("df7cfbbe-905c-4444-a16d-cc840f552bd9"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8c01cced-b345-40f1-9b77-65c06918763d"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8328),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("863ec611-e6f1-4c9b-9e2a-f5d0cd366cca"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8a796db6-d14d-4171-9594-1275b02ec8c9"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8371),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("899c332a-11d2-4651-ae68-cb43c071af7d"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("4e04ae67-0793-444c-a0f7-b82fd4ab0228"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8469),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("339c3306-462f-4395-9711-06d0d8bf8713"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("080aea41-8a23-4f14-8812-04ea86fa2b2f"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8512),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c86cace6-30f1-4c7e-864e-498b24fe0b7d"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("a33c14c8-e454-4e47-8e03-a846575adc80"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 239, DateTimeKind.Local).AddTicks(8558),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5ba1028e-0a5d-489d-86f5-97bcfb1fccaa"),
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Timetable", b =>
                {
                    b.Property<Guid>("TimetableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllDays")
                        .HasColumnType("boolean");

                    b.Property<string>("AllDaysIn")
                        .HasColumnType("text");

                    b.Property<string>("AllDaysOut")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Friday")
                        .HasColumnType("boolean");

                    b.Property<string>("FridayIn")
                        .HasColumnType("text");

                    b.Property<string>("FridayOut")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Monday")
                        .HasColumnType("boolean");

                    b.Property<string>("MondayIn")
                        .HasColumnType("text");

                    b.Property<string>("MondayOut")
                        .HasColumnType("text");

                    b.Property<bool>("Saturday")
                        .HasColumnType("boolean");

                    b.Property<string>("SaturdayIn")
                        .HasColumnType("text");

                    b.Property<string>("SaturdayOut")
                        .HasColumnType("text");

                    b.Property<string>("Sunday")
                        .HasColumnType("text");

                    b.Property<string>("SundayIn")
                        .HasColumnType("text");

                    b.Property<string>("SundayOut")
                        .HasColumnType("text");

                    b.Property<bool>("Thursday")
                        .HasColumnType("boolean");

                    b.Property<string>("ThursdayIn")
                        .HasColumnType("text");

                    b.Property<string>("ThursdayOut")
                        .HasColumnType("text");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("boolean");

                    b.Property<string>("TuesdayIn")
                        .HasColumnType("text");

                    b.Property<string>("TuesdayOut")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("boolean");

                    b.Property<string>("WednesdayIn")
                        .HasColumnType("text");

                    b.Property<string>("WednesdayOut")
                        .HasColumnType("text");

                    b.Property<bool>("hrs24")
                        .HasColumnType("boolean");

                    b.HasKey("TimetableId");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TransportLines", b =>
                {
                    b.Property<Guid>("TransportLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportLineId");

                    b.ToTable("TransportLines");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Transports", b =>
                {
                    b.Property<Guid>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Treatments", b =>
                {
                    b.Property<Guid>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TreatmentId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeProviders", b =>
                {
                    b.Property<Guid>("TypeProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeProviderId");

                    b.ToTable("TypeProviders");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeSolicitation", b =>
                {
                    b.Property<Guid>("TypeSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeSolicitationId");

                    b.ToTable("TypeSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeTransports", b =>
                {
                    b.Property<Guid>("TypeTransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeTransportId");

                    b.ToTable("TypeTransports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Unions", b =>
                {
                    b.Property<Guid>("UnionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UnionId");

                    b.ToTable("Unions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("5605e647-4d6d-43b3-906a-2937fb8ee3f5"),
                            ClientId = new Guid("14625b02-62cf-4810-8d45-8d03e869d100"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(7514),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrador",
                            Surname = "Master",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersAccess", b =>
                {
                    b.Property<Guid>("UserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DTVerify")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserAccessId");

                    b.ToTable("UsersAccess");

                    b.HasData(
                        new
                        {
                            UserAccessId = new Guid("acfdcefb-9c22-4fdc-96ed-1c50f9f1dcb4"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(86),
                            IsActive = true,
                            IsDeleted = false,
                            IsVerify = true,
                            Login = "user@uzenix.com",
                            Password = "AO5+45YXX6IBTW3FF/sVqz7BxjClYY3xE0qkWef8lLgJOnM7Rk6cUiF3t8v5huFcWw==",
                            UserId = new Guid("5605e647-4d6d-43b3-906a-2937fb8ee3f5")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissions", b =>
                {
                    b.Property<Guid>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionId");

                    b.ToTable("UsersPermissions");

                    b.HasData(
                        new
                        {
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68"),
                            ClientId = new Guid("14625b02-62cf-4810-8d45-8d03e869d100"),
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(4526),
                            GroupUserId = new Guid("887b7db4-6f1d-4ca4-8b00-8a32ab08ee84"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("b24841f5-aa22-400f-9b24-7dfa668bc748"),
                            UserId = new Guid("5605e647-4d6d-43b3-906a-2937fb8ee3f5")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissionsMenus", b =>
                {
                    b.Property<Guid>("UserPermissionMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserPermissionId")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionMenuId");

                    b.ToTable("UsersPermissionsMenus");

                    b.HasData(
                        new
                        {
                            UserPermissionMenuId = new Guid("46744193-3031-42fb-8eaf-e5fea1619501"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8552),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d037d4b3-786b-4122-bb12-6fff932854b9"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("51beb53a-9425-4208-a746-5b84179df225"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8828),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("414b2ed7-bcca-4f6e-b305-062c68877bfc"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("768334b5-678b-4f51-b43d-11b3c77b85a6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8871),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6958b355-8f77-40d2-84d4-dfeed9cdb0e3"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("80bd0bec-262d-44d5-805e-77dbf39ab079"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8896),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d3e31620-2cbb-46b3-8550-202abacb0606"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("1cb940ca-6e08-4226-90c6-7c9c0eb338e6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8918),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("27bd13e1-36f4-497a-89ca-c49a183bfac3"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("f1fc4d1a-a91c-4552-b706-e79651952ad7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8943),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("faa6e48f-fc84-498c-a2df-7658f0e2b20c"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("d89a378b-d679-486e-b533-72475538a47c"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8965),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1f2bd79e-66db-4ebe-890b-6417092fcdcd"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("0b20640c-e98f-4ac9-a4d7-4cc8dc79e018"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(8986),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("699cec88-b98a-4547-b9a5-e06e2b6ce8bc"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("56b35b75-85e6-4815-8379-8e02c850bf71"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9013),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f97d203e-7cc1-4c0e-b098-6d99ef8826e5"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("14853d7f-eb0c-4f96-a3f2-0ba7790f62df"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9038),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b09db71e-e697-4169-ad3a-ff3ce4dd7c53"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("65163df7-dfe7-42e5-8692-6ae8c614220d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9060),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4f130b00-f074-4613-bc2d-9dacfcc33c41"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("2a9a895e-0426-4ca9-a401-c04543aa1e02"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9081),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0f17ac4c-8796-43c2-8d65-7fab6bd760b4"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ea506768-15ad-43d2-a476-a0ce48ff7d6b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9103),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9b8bb812-d8f0-4786-9b42-4ceafd2e1941"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("a622c100-f46b-4e34-899a-2462b58c2e15"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9124),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("bc0bb622-25ea-45af-a5db-e06512ce9c82"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("61326e93-bf72-41d6-b6ed-fdeab5e4047e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9196),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4d301736-a1d4-4134-9f88-57830514d627"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("78dba7d2-07e1-42dc-b11e-947721f2ce38"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9222),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b3d94456-6c56-4343-b483-af199326b2a5"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("05785714-fe2d-4c68-995f-32e2cea31dd3"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9247),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("df7cfbbe-905c-4444-a16d-cc840f552bd9"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("3c9557b8-f7d8-4e8c-ad4e-4769feaf4eb1"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9271),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("863ec611-e6f1-4c9b-9e2a-f5d0cd366cca"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("3b294238-523c-4af5-8db0-03e05530d23f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9293),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("899c332a-11d2-4651-ae68-cb43c071af7d"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("53d15809-75d2-4ec8-b9a7-91c3933f4732"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9315),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("339c3306-462f-4395-9711-06d0d8bf8713"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e3aa32b9-bd39-487f-8d69-b474ba07dd6c"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9335),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c86cace6-30f1-4c7e-864e-498b24fe0b7d"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("24a15367-79f2-4acc-ae77-85ea84af1c5e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 241, DateTimeKind.Local).AddTicks(9356),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5ba1028e-0a5d-489d-86f5-97bcfb1fccaa"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("b4875fa7-932a-4b6e-9e1e-95f5b9f11d68")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.Property<Guid>("UserPropertieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("TypeUserTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPropertieId");

                    b.HasIndex("TypeUserTypeId");

                    b.ToTable("UsersProperties");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersSite", b =>
                {
                    b.Property<Guid>("UserSiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserSiteId");

                    b.ToTable("UsersSite");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersStatus", b =>
                {
                    b.Property<Guid>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserStatusId");

                    b.ToTable("UsersStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTokens", b =>
                {
                    b.Property<Guid>("UserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTokenId");

                    b.ToTable("UsersTokens");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTypes", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTypeId");

                    b.ToTable("UsersTypes");

                    b.HasData(
                        new
                        {
                            UserTypeId = new Guid("2626cc90-5fbe-41ac-8284-f67946656662"),
                            Description = "usuário administrativo",
                            DtInsert = new DateTime(2021, 4, 22, 16, 20, 41, 240, DateTimeKind.Local).AddTicks(5460),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.Systems", "System")
                        .WithMany()
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.UsersTypes", "Type")
                        .WithMany()
                        .HasForeignKey("TypeUserTypeId");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}

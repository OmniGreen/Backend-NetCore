// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uzx.Infra.Data.Context;

namespace Uzx.Infra.Data.Migrations
{
    [DbContext(typeof(UzxBaseDbContext))]
    [Migration("20210223191434_v6")]
    partial class v6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Uzx.Domain.Core.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("MessageType")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationDate");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoredEvent");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Patio")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.AddressTypes", b =>
                {
                    b.Property<Guid>("AdressTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("AdressTypesId");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Agents", b =>
                {
                    b.Property<Guid>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Banners", b =>
                {
                    b.Property<Guid>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NameBanner")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Page")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Breeds", b =>
                {
                    b.Property<Guid>("BreedsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BreedsId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Categories", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cids", b =>
                {
                    b.Property<Guid>("CidsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CidsId");

                    b.ToTable("Cids");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cities", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Clients", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Document1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Document2")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name2")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Person")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("b13dcd2f-6680-44e0-b3e6-0148936ac1f9"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 266, DateTimeKind.Local).AddTicks(8445),
                            IsActive = true,
                            IsAdmin = true,
                            IsDeleted = false,
                            Name1 = "Administrador Uzenix",
                            Name2 = "Admin",
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Person = "1",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsConfigurations", b =>
                {
                    b.Property<Guid>("ClientConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessPort")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("DataBaseIP")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseLogin")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseName")
                        .HasColumnType("text");

                    b.Property<string>("DataBasePassword")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCampaingSave")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelFields")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<bool>("enableSsl")
                        .HasColumnType("boolean");

                    b.Property<string>("smtpPass")
                        .HasColumnType("text");

                    b.Property<string>("smtpPort")
                        .HasColumnType("text");

                    b.Property<string>("smtpServer")
                        .HasColumnType("text");

                    b.Property<string>("smtpUser")
                        .HasColumnType("text");

                    b.HasKey("ClientConfigurationId");

                    b.ToTable("ClientsConfigurations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsContacts", b =>
                {
                    b.Property<Guid>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactSector")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientContactId");

                    b.ToTable("ClientsContacts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsNewsletter", b =>
                {
                    b.Property<Guid>("ClientNewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientNewsletterId");

                    b.ToTable("ClientsNewsletter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsOperators", b =>
                {
                    b.Property<Guid>("ClientOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientOperatorId");

                    b.ToTable("ClientsOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.Property<Guid>("ClientSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientSystemId");

                    b.HasIndex("SystemId");

                    b.ToTable("ClientsSystems");

                    b.HasData(
                        new
                        {
                            ClientSystemId = new Guid("aa73c33a-ce84-4342-ad64-771d4ec64625"),
                            ClientId = new Guid("b13dcd2f-6680-44e0-b3e6-0148936ac1f9"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 270, DateTimeKind.Local).AddTicks(7529),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CompanyOperators", b =>
                {
                    b.Property<Guid>("CompanyOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyOperatorId");

                    b.ToTable("CompanyOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CostCenter", b =>
                {
                    b.Property<Guid>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Countries", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Coupons", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(200)");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Customers", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AddressIsVisible")
                        .HasColumnType("boolean");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EmailIsVisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("LogoIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("PhoneNumberIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SiteIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersBanners", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BannerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersBanners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersCoupons", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersCoupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersEvents", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersEvents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSalePlans", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSocialMedias", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Departments", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Doctors", b =>
                {
                    b.Property<Guid>("DoctorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DoctorsId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Educations", b =>
                {
                    b.Property<Guid>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Events", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Titel")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.EventsSocialMedias", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EventId");

                    b.ToTable("EventsSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.FamilyType", b =>
                {
                    b.Property<Guid>("FamilyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FamilyTypeId");

                    b.ToTable("FamilyType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Functions", b =>
                {
                    b.Property<Guid>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsers", b =>
                {
                    b.Property<Guid>("GroupUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserId");

                    b.ToTable("GroupUsers");

                    b.HasData(
                        new
                        {
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 271, DateTimeKind.Local).AddTicks(9640),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administradores",
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsersMenus", b =>
                {
                    b.Property<Guid>("GroupUserMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserMenuId");

                    b.ToTable("GroupUsersMenus");

                    b.HasData(
                        new
                        {
                            GroupUserMenuId = new Guid("13ada215-8bfd-48fb-8844-89e811a13835"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(6973),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("9508c352-78ef-41dc-bd7e-0d3bcc7a1dc0"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7402),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("94624ad0-6215-4963-a88c-1cb2594ac138"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("164f866a-937f-4a69-919e-b33a1f899ebd"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7454),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("92d5473b-bd12-4892-8c92-a2223862f6b7"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("18701c52-7808-4981-8619-17391777702e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7491),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b6b3a118-c462-4359-a09d-be362bef5fb8"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("78bcc037-5ed4-4137-8004-d509fa87ac08"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7526),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("413c1af5-7e65-409d-a78f-a21b78b33894"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("bd3f5aaa-2427-41f8-9bb5-671abd4233c0"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7565),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2b5dd6f8-5061-47c7-b224-572732adf465"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("64665393-b978-463d-98c5-34147b06cde9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7599),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("99d8c185-dfc4-4009-8216-81c3cf4c2c91"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("5efd2b46-1612-4e54-95e4-4ef59c51f128"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7632),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8fb8ca0c-b1cc-4261-8894-ee2c00328150"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("f867e574-b33b-4620-a02e-0e18b6d2f990"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7729),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("a7578166-d225-4728-8713-982779523bba"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("fa7d3862-6b4e-4229-9edc-fc64cd813f3f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7766),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("096fad4d-35cf-4397-b8b3-1120acad458a"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("82762c44-a724-4844-9015-615d0580161e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7803),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("50f65112-2ce0-4240-809e-9c6d026cda44"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("1f0e723b-b684-4de8-9831-c48a408995ab"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7836),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9044d562-63db-40a5-a481-90c801affea0"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("3b326fd1-44a3-486f-a9d8-5c59dcf8a72b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7871),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1d4eab66-8cf5-422a-92cc-9171ee81e027"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("19f20e50-145f-4ec2-b0a5-8cae2ab3955b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7904),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6ee1d2a7-b886-487c-b6a5-94d7ce23b149"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("e0e91a03-a6c1-4ac8-8843-da619fd10a7e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7938),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("34a9c37e-8d6d-4632-b23e-af497d3c03c7"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("8679b572-7052-46e8-a0db-33da8c38b5b1"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(7970),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("49498df0-a380-48be-82ab-95fb0d79302c"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("27a642da-8671-4a47-9ff7-5f30726326c5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(8002),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("50b09f12-2c62-4aec-aab2-5640cfc45d05"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("51de321a-41fd-4b8f-a99b-bd2544048d03"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(8038),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("46774297-761c-4bc8-bf95-c0b01d1d92ed"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("b27c7c04-8e84-4439-b847-04939e337bf8"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(8074),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8aa7461f-e2a6-4a5e-93f1-a95ac6e5204b"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("3cfb10f4-fb6a-46f1-b5b8-0f8820615ba7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(8107),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("daf44ea7-539c-409d-9ce1-7154fa73ae7b"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("5fbe3d72-6552-4bea-952a-a5cbf05d63d8"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(8140),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4451093a-d1d8-4b82-970d-0071c848490e"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("268d87fe-4bfb-4dc7-91b7-556c1f0b5fa9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(8173),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("aa8f351e-3cf2-4e01-80ec-9ddb26fc6680"),
                            R = true,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            U = true
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Higher", b =>
                {
                    b.Property<Guid>("HigherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HigherId");

                    b.ToTable("Higher");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Hospitals", b =>
                {
                    b.Property<Guid>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Kinship", b =>
                {
                    b.Property<Guid>("KinshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("KinshipId");

                    b.ToTable("Kinship");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Languages", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = new Guid("28ab2c91-01de-4829-81e6-63b5b73ff746"),
                            Alt = "Idioma do país Brasil",
                            Country = "Brasil",
                            Description = "Idioma em Portugues Brasileiro",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 271, DateTimeKind.Local).AddTicks(2635),
                            FileName = "ptbr.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Portugues",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("8016a938-9a8c-475c-adef-95f2c70abdae"),
                            Alt = "Idioma do país EUA",
                            Country = "EUA",
                            Description = "Idioma em Inglês Norte Americano",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 271, DateTimeKind.Local).AddTicks(7467),
                            FileName = "us.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inglês",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("8626b0d4-534b-43b7-a548-bd11d49d79a9"),
                            Alt = "Idioma do país Espanha.",
                            Country = "Espanha",
                            Description = "Idioma em Espanhol da Espanha.",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 271, DateTimeKind.Local).AddTicks(7642),
                            FileName = "es.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Espanhol",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MaritalStatus", b =>
                {
                    b.Property<Guid>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Menus", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("MenuIdPai")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenusTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Target")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            Alt = "Menu de Cadastros",
                            Description = "Menu para realizar diversos cadastros",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(5367),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("00000000-0000-0000-0000-000000000000"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastros",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("94624ad0-6215-4963-a88c-1cb2594ac138"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9226),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operadoras",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("92d5473b-bd12-4892-8c92-a2223862f6b7"),
                            Alt = "Listagem de Operadoras",
                            Description = "Realiza a busca de Operadoras",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9394),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/list",
                            MenuIdPai = new Guid("94624ad0-6215-4963-a88c-1cb2594ac138"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("b6b3a118-c462-4359-a09d-be362bef5fb8"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9478),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/details",
                            MenuIdPai = new Guid("94624ad0-6215-4963-a88c-1cb2594ac138"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("413c1af5-7e65-409d-a78f-a21b78b33894"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9684),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2b5dd6f8-5061-47c7-b224-572732adf465"),
                            Alt = "Listagem de Usuarios",
                            Description = "Realiza a busca de Usuarios",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9867),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/list",
                            MenuIdPai = new Guid("413c1af5-7e65-409d-a78f-a21b78b33894"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("99d8c185-dfc4-4009-8216-81c3cf4c2c91"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9940),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/details",
                            MenuIdPai = new Guid("413c1af5-7e65-409d-a78f-a21b78b33894"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8fb8ca0c-b1cc-4261-8894-ee2c00328150"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(15),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menus",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("a7578166-d225-4728-8713-982779523bba"),
                            Alt = "Listagem de Menus",
                            Description = "Realiza a busca de Menus",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(88),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/list",
                            MenuIdPai = new Guid("8fb8ca0c-b1cc-4261-8894-ee2c00328150"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("096fad4d-35cf-4397-b8b3-1120acad458a"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(162),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/details",
                            MenuIdPai = new Guid("8fb8ca0c-b1cc-4261-8894-ee2c00328150"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("50f65112-2ce0-4240-809e-9c6d026cda44"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(234),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Clientes",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("9044d562-63db-40a5-a481-90c801affea0"),
                            Alt = "Listagem de Clientes",
                            Description = "Realiza a busca de Clientes",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(309),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/list",
                            MenuIdPai = new Guid("50f65112-2ce0-4240-809e-9c6d026cda44"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("1d4eab66-8cf5-422a-92cc-9171ee81e027"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(449),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/details",
                            MenuIdPai = new Guid("50f65112-2ce0-4240-809e-9c6d026cda44"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("6ee1d2a7-b886-487c-b6a5-94d7ce23b149"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(521),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Idiomas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("34a9c37e-8d6d-4632-b23e-af497d3c03c7"),
                            Alt = "Listagem de Idiomas",
                            Description = "Realiza a busca de Idiomas",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(593),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/list",
                            MenuIdPai = new Guid("6ee1d2a7-b886-487c-b6a5-94d7ce23b149"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("49498df0-a380-48be-82ab-95fb0d79302c"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(666),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/details",
                            MenuIdPai = new Guid("6ee1d2a7-b886-487c-b6a5-94d7ce23b149"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("50b09f12-2c62-4aec-aab2-5640cfc45d05"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(738),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sistemas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("46774297-761c-4bc8-bf95-c0b01d1d92ed"),
                            Alt = "Listagem de Sistemas",
                            Description = "Realiza a busca de Sistemas",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(814),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/list",
                            MenuIdPai = new Guid("50b09f12-2c62-4aec-aab2-5640cfc45d05"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8aa7461f-e2a6-4a5e-93f1-a95ac6e5204b"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(953),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/details",
                            MenuIdPai = new Guid("50b09f12-2c62-4aec-aab2-5640cfc45d05"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("daf44ea7-539c-409d-9ce1-7154fa73ae7b"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(1030),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Grupo de Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("4451093a-d1d8-4b82-970d-0071c848490e"),
                            Alt = "Listagem de Grupo de Usuarios",
                            Description = "Realiza a busca de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(1104),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/list",
                            MenuIdPai = new Guid("daf44ea7-539c-409d-9ce1-7154fa73ae7b"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("aa8f351e-3cf2-4e01-80ec-9ddb26fc6680"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(1175),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/details",
                            MenuIdPai = new Guid("daf44ea7-539c-409d-9ce1-7154fa73ae7b"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MenusTypes", b =>
                {
                    b.Property<Guid>("MenusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("MenusTypeId");

                    b.ToTable("MenusType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Offices", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Plans", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CompanyOperatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Procedures", b =>
                {
                    b.Property<Guid>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Providers", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Responsabilities", b =>
                {
                    b.Property<Guid>("ResponsabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ResponsabilityId");

                    b.ToTable("Resposabilities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SalePlans", b =>
                {
                    b.Property<Guid>("SalePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DurationMounth")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanner")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoupons")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvents")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSearch")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SalePlanId");

                    b.ToTable("SalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Shifts", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SocialMedias", b =>
                {
                    b.Property<Guid>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SocialMediaId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Specialities", b =>
                {
                    b.Property<Guid>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.States", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.StatusSolicitation", b =>
                {
                    b.Property<Guid>("SatusSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SatusSolicitationId");

                    b.ToTable("StatusSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Systems", b =>
                {
                    b.Property<Guid>("SystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemId");

                    b.ToTable("Systems");

                    b.HasData(
                        new
                        {
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            Alt = "Sistema Administrativo",
                            Description = "Sistema Administrativo",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 270, DateTimeKind.Local).AddTicks(3640),
                            Image = "",
                            IsActive = true,
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsLanguages", b =>
                {
                    b.Property<Guid>("SystemLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("SystemLanguageId");

                    b.ToTable("SystemsLanguages");

                    b.HasData(
                        new
                        {
                            SystemLanguageId = new Guid("58b6d9ab-d76b-4b3c-b09d-e097bed9ed33"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 271, DateTimeKind.Local).AddTicks(6998),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("28ab2c91-01de-4829-81e6-63b5b73ff746"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("c886f003-2964-4345-95a8-feffe614a917"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 271, DateTimeKind.Local).AddTicks(7595),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("8016a938-9a8c-475c-adef-95f2c70abdae"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("8109a77c-79f2-4afd-83d5-86c9075ae5d5"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 271, DateTimeKind.Local).AddTicks(7696),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("8626b0d4-534b-43b7-a548-bd11d49d79a9"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsMenus", b =>
                {
                    b.Property<Guid>("SystemMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemMenuId");

                    b.ToTable("SystemsMenus");

                    b.HasData(
                        new
                        {
                            SystemMenuId = new Guid("861c6fe4-9733-4a43-b4ed-da6c628ba9fd"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(8232),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("24adeb6a-2a74-4e11-81ab-970d937bcc1b"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9337),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("94624ad0-6215-4963-a88c-1cb2594ac138"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8d866491-ff04-446f-87e7-c4009e889dfa"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9431),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("92d5473b-bd12-4892-8c92-a2223862f6b7"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("9cc350a5-910e-42ae-a1aa-8d2b5bddd29e"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9511),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b6b3a118-c462-4359-a09d-be362bef5fb8"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("2f7b284c-25f4-4a5d-9959-e1edfb87b6e6"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9816),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("413c1af5-7e65-409d-a78f-a21b78b33894"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("eef34f1b-322e-4074-9225-31651441bcb6"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9902),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2b5dd6f8-5061-47c7-b224-572732adf465"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("18b1f421-5501-4407-9d27-68ef17a83878"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 272, DateTimeKind.Local).AddTicks(9973),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("99d8c185-dfc4-4009-8216-81c3cf4c2c91"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8d9387bc-2e59-44ef-a7e6-c03234f8184b"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(48),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8fb8ca0c-b1cc-4261-8894-ee2c00328150"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("9bc5c477-f461-438b-9bff-459001705364"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(123),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("a7578166-d225-4728-8713-982779523bba"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("f6828b8f-1cc9-49b7-8737-5622adfa4ec4"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(196),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("096fad4d-35cf-4397-b8b3-1120acad458a"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("2e01659d-e471-4f97-a5e5-b9beea534952"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(267),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("50f65112-2ce0-4240-809e-9c6d026cda44"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("7a5519e8-d11c-4cd9-b3e7-ed1686d136de"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(407),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9044d562-63db-40a5-a481-90c801affea0"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("5ba67035-2345-46d3-86ad-f45194cdb130"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(483),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1d4eab66-8cf5-422a-92cc-9171ee81e027"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("20a34b3d-8bd0-4c9f-9abe-dd8637a8a4b0"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(555),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6ee1d2a7-b886-487c-b6a5-94d7ce23b149"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("c5ea3b23-f7b1-44fc-a336-dfa6accb8c2a"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(626),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("34a9c37e-8d6d-4632-b23e-af497d3c03c7"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("2c01b715-0128-45b9-8619-b91712c31979"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(699),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("49498df0-a380-48be-82ab-95fb0d79302c"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("5830abb2-41d4-436e-a3bb-60b0c44edbc1"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(774),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("50b09f12-2c62-4aec-aab2-5640cfc45d05"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("881f95f6-71ed-4dd0-b9dc-2b1849884e5e"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(848),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("46774297-761c-4bc8-bf95-c0b01d1d92ed"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("6b3a2451-4a89-4194-aff0-fe240824c1fa"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(989),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8aa7461f-e2a6-4a5e-93f1-a95ac6e5204b"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("eaf9c3f5-f158-4aff-b55a-243dace8fc46"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(1065),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("daf44ea7-539c-409d-9ce1-7154fa73ae7b"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("be4fe5dd-14e6-4c79-8054-3f8c780ecde3"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(1138),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4451093a-d1d8-4b82-970d-0071c848490e"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("d6b9ef35-c32a-43c7-b18d-393eb6c2e674"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 273, DateTimeKind.Local).AddTicks(1208),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("aa8f351e-3cf2-4e01-80ec-9ddb26fc6680"),
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TransportLines", b =>
                {
                    b.Property<Guid>("TransportLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportLineId");

                    b.ToTable("TransportLines");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Transports", b =>
                {
                    b.Property<Guid>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Treatments", b =>
                {
                    b.Property<Guid>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TreatmentId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeProviders", b =>
                {
                    b.Property<Guid>("TypeProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeProviderId");

                    b.ToTable("TypeProviders");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeSolicitation", b =>
                {
                    b.Property<Guid>("TypeSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeSolicitationId");

                    b.ToTable("TypeSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeTransports", b =>
                {
                    b.Property<Guid>("TypeTransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeTransportId");

                    b.ToTable("TypeTransports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Unions", b =>
                {
                    b.Property<Guid>("UnionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UnionId");

                    b.ToTable("Unions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("3cddc745-b603-4f99-8be6-70ea25d9b9a7"),
                            ClientId = new Guid("b13dcd2f-6680-44e0-b3e6-0148936ac1f9"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 274, DateTimeKind.Local).AddTicks(3274),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrador",
                            Surname = "Master",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersAccess", b =>
                {
                    b.Property<Guid>("UserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DTVerify")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserAccessId");

                    b.ToTable("UsersAccess");

                    b.HasData(
                        new
                        {
                            UserAccessId = new Guid("b2cb7c06-c84e-4bf7-99d9-7c760a8d07cf"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 274, DateTimeKind.Local).AddTicks(6654),
                            IsActive = true,
                            IsDeleted = false,
                            IsVerify = true,
                            Login = "user@uzenix.com",
                            Password = "AO5+45YXX6IBTW3FF/sVqz7BxjClYY3xE0qkWef8lLgJOnM7Rk6cUiF3t8v5huFcWw==",
                            UserId = new Guid("3cddc745-b603-4f99-8be6-70ea25d9b9a7")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissions", b =>
                {
                    b.Property<Guid>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionId");

                    b.ToTable("UsersPermissions");

                    b.HasData(
                        new
                        {
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243"),
                            ClientId = new Guid("b13dcd2f-6680-44e0-b3e6-0148936ac1f9"),
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(1239),
                            GroupUserId = new Guid("c238648a-a067-4758-8fd9-67ae9273a19b"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("93502c5d-4ed6-49ce-94c2-464f8c1d0f47"),
                            UserId = new Guid("3cddc745-b603-4f99-8be6-70ea25d9b9a7")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissionsMenus", b =>
                {
                    b.Property<Guid>("UserPermissionMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserPermissionId")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionMenuId");

                    b.ToTable("UsersPermissionsMenus");

                    b.HasData(
                        new
                        {
                            UserPermissionMenuId = new Guid("2d3b51f3-d6cd-41cf-9ebe-fc2f766f876d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6418),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("7a8f92f7-6697-4d0b-9b71-558debb262ef"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("78ab8506-2d39-4ac5-ad7f-42b9faca205a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6759),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("94624ad0-6215-4963-a88c-1cb2594ac138"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("96c14114-ce92-4105-a106-7963a1b5aa7c"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6807),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("92d5473b-bd12-4892-8c92-a2223862f6b7"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("1a04d3e1-3401-41df-8b21-01e2bbe44707"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6843),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b6b3a118-c462-4359-a09d-be362bef5fb8"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("86c6139a-7d7f-433c-ab23-d1a6ce8f75bf"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6878),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("413c1af5-7e65-409d-a78f-a21b78b33894"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("2bd66e26-6e26-4afa-9b2a-6963be19f148"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6918),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2b5dd6f8-5061-47c7-b224-572732adf465"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("10862cf6-2a83-4a2f-b255-d75212fb2aa6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6953),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("99d8c185-dfc4-4009-8216-81c3cf4c2c91"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("6a7d0e41-c7f9-45cb-9f39-071bbd30e72e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(6986),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8fb8ca0c-b1cc-4261-8894-ee2c00328150"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("65a2426a-83a2-4065-a565-f6b5711c98a4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7027),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("a7578166-d225-4728-8713-982779523bba"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("be292278-0aea-4767-be7c-c3afc1b33c84"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7065),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("096fad4d-35cf-4397-b8b3-1120acad458a"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("c29aa404-c881-4a61-85fd-c1c1bf441409"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7099),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("50f65112-2ce0-4240-809e-9c6d026cda44"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("9f939341-9ea8-47f0-b542-03b6e2f5a817"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7132),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("9044d562-63db-40a5-a481-90c801affea0"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e43212b1-7bac-41f2-aae4-4029cfe33bbd"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7259),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1d4eab66-8cf5-422a-92cc-9171ee81e027"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("f0610ddb-0f24-42e8-8517-6fa710fe7e7b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7300),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("6ee1d2a7-b886-487c-b6a5-94d7ce23b149"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("4230f371-e513-4c78-93a0-b227f0cd3fc3"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7335),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("34a9c37e-8d6d-4632-b23e-af497d3c03c7"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("628b5c90-3274-409e-988b-7337a01d3ecb"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7370),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("49498df0-a380-48be-82ab-95fb0d79302c"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("2d92acbb-ee52-4c6c-b3f2-c2d56ae99e06"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7410),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("50b09f12-2c62-4aec-aab2-5640cfc45d05"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("54ada482-5873-4056-af01-2af1e5d68da7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7447),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("46774297-761c-4bc8-bf95-c0b01d1d92ed"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("de9ddf9c-711d-4cfd-ab9a-4aa8d5a21d94"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7482),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8aa7461f-e2a6-4a5e-93f1-a95ac6e5204b"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("8c90b560-0301-41c9-beb2-4f8499048e0f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7517),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("daf44ea7-539c-409d-9ce1-7154fa73ae7b"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("68845f99-0607-4244-a433-0c7aa823fe7e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7553),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4451093a-d1d8-4b82-970d-0071c848490e"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("23dd079c-2e63-46ba-bb2c-4f3ea4667ca4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 275, DateTimeKind.Local).AddTicks(7588),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("aa8f351e-3cf2-4e01-80ec-9ddb26fc6680"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("de79fb72-35ea-4c9c-b3da-e05c16f49243")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.Property<Guid>("UserPropertieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("TypeUserTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPropertieId");

                    b.HasIndex("TypeUserTypeId");

                    b.ToTable("UsersProperties");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersStatus", b =>
                {
                    b.Property<Guid>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserStatusId");

                    b.ToTable("UsersStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTokens", b =>
                {
                    b.Property<Guid>("UserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTokenId");

                    b.ToTable("UsersTokens");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTypes", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTypeId");

                    b.ToTable("UsersTypes");

                    b.HasData(
                        new
                        {
                            UserTypeId = new Guid("c8883840-078b-426c-8473-484f7b8d1c02"),
                            Description = "usuário administrativo",
                            DtInsert = new DateTime(2021, 2, 23, 16, 14, 32, 274, DateTimeKind.Local).AddTicks(315),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.Systems", "System")
                        .WithMany()
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.UsersTypes", "Type")
                        .WithMany()
                        .HasForeignKey("TypeUserTypeId");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}

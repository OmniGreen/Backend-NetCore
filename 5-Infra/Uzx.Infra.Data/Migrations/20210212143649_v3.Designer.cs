// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uzx.Infra.Data.Context;

namespace Uzx.Infra.Data.Migrations
{
    [DbContext(typeof(UzxBaseDbContext))]
    [Migration("20210212143649_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Uzx.Domain.Core.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("MessageType")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationDate");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoredEvent");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Patio")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.AddressTypes", b =>
                {
                    b.Property<Guid>("AdressTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("AdressTypesId");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Agents", b =>
                {
                    b.Property<Guid>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Banners", b =>
                {
                    b.Property<Guid>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NameBanner")
                        .HasColumnType("text");

                    b.Property<string>("Page")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Breeds", b =>
                {
                    b.Property<Guid>("BreedsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BreedsId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Categories", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cids", b =>
                {
                    b.Property<Guid>("CidsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CidsId");

                    b.ToTable("Cids");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cities", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Clients", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Document1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Document2")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name2")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Person")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("aab934ae-f162-4345-8a9b-c4eab78b6916"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 745, DateTimeKind.Local).AddTicks(8188),
                            IsActive = true,
                            IsAdmin = true,
                            IsDeleted = false,
                            Name1 = "Administrador Uzenix",
                            Name2 = "Admin",
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Person = "1",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsConfigurations", b =>
                {
                    b.Property<Guid>("ClientConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessPort")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("DataBaseIP")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseLogin")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseName")
                        .HasColumnType("text");

                    b.Property<string>("DataBasePassword")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCampaingSave")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelFields")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<bool>("enableSsl")
                        .HasColumnType("boolean");

                    b.Property<string>("smtpPass")
                        .HasColumnType("text");

                    b.Property<string>("smtpPort")
                        .HasColumnType("text");

                    b.Property<string>("smtpServer")
                        .HasColumnType("text");

                    b.Property<string>("smtpUser")
                        .HasColumnType("text");

                    b.HasKey("ClientConfigurationId");

                    b.ToTable("ClientsConfigurations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsContacts", b =>
                {
                    b.Property<Guid>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactSector")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientContactId");

                    b.ToTable("ClientsContacts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsNewsletter", b =>
                {
                    b.Property<Guid>("ClientNewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientNewsletterId");

                    b.ToTable("ClientsNewsletter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsOperators", b =>
                {
                    b.Property<Guid>("ClientOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientOperatorId");

                    b.ToTable("ClientsOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.Property<Guid>("ClientSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientSystemId");

                    b.HasIndex("SystemId");

                    b.ToTable("ClientsSystems");

                    b.HasData(
                        new
                        {
                            ClientSystemId = new Guid("27aa0e7a-4393-4237-aabf-f8462784953b"),
                            ClientId = new Guid("aab934ae-f162-4345-8a9b-c4eab78b6916"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3010),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CompanyOperators", b =>
                {
                    b.Property<Guid>("CompanyOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyOperatorId");

                    b.ToTable("CompanyOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CostCenter", b =>
                {
                    b.Property<Guid>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Countries", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Coupons", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(200)");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Customers", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AddressIsVisible")
                        .HasColumnType("boolean");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EmailIsVisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("LogoIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("PhoneNumberIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SiteIsVisible")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersBanners", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BannerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersBanners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersCoupons", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersCoupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersEvents", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersEvents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSalePlans", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSocialMedias", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Departments", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Doctors", b =>
                {
                    b.Property<Guid>("DoctorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DoctorsId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Educations", b =>
                {
                    b.Property<Guid>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Events", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Titel")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.EventsSocialMedias", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EventId");

                    b.ToTable("EventsSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.FamilyType", b =>
                {
                    b.Property<Guid>("FamilyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FamilyTypeId");

                    b.ToTable("FamilyType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Functions", b =>
                {
                    b.Property<Guid>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsers", b =>
                {
                    b.Property<Guid>("GroupUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserId");

                    b.ToTable("GroupUsers");

                    b.HasData(
                        new
                        {
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3285),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administradores",
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsersMenus", b =>
                {
                    b.Property<Guid>("GroupUserMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserMenuId");

                    b.ToTable("GroupUsersMenus");

                    b.HasData(
                        new
                        {
                            GroupUserMenuId = new Guid("dddc5ba2-a203-48c4-a2a9-4f7f4d47249e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(694),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("1221eca4-bcfd-4eab-98f0-2d65f78c7c10"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(839),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f63b84ef-80d8-4ec2-ab2a-bee261631e03"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("fbdec2cb-18d0-4d9a-b887-e2e8425a038b"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(865),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("ce474796-8302-42c6-a734-a1e88601baa2"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("9c928ee2-a9db-4608-92db-30d94bc498de"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(887),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8cafd5a2-c81e-4709-9f77-ddf58cf60ff2"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("6960e35b-c20a-4cdf-9eaf-a28bad56013a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(907),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("47a37c0c-bf55-435b-b715-86405bdc122d"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("436835ce-b2bb-4039-a936-b431dcda917a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(928),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("e97da2d6-05c2-4302-8de9-555aa0e251e0"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("8610e1ea-2689-43e3-b33d-0c21f6667ec6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(948),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c2635ce1-67ee-4945-892d-294f17567f29"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("b61d2618-5148-4982-b3cb-7ce0e000c5fa"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(968),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("adef594e-7031-480f-aca0-42c5fdb37ed8"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("b484e279-2904-4fcb-91b6-58a0badae033"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(987),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8b73b8b2-ef59-478a-8dc2-cc5bb2c6420d"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("4c2783a9-e8f1-4ec8-904e-ea677df6ef8a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1008),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("cc37734f-8893-4dd9-88a8-36f9a6697011"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("295eb7b0-8c44-467f-9339-d43b005ff7b1"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1030),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("02c4dfb1-14df-4ccf-90fd-518f27e04c78"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("f69f714e-570f-4ede-bee3-a830ef8e31ea"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1049),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("847a915a-6971-4a38-8c27-bbdc797244c8"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("78b6f547-2300-47ac-9acd-d53d07fa358e"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1068),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8a5c237b-0bf9-4147-8a81-6bc9b87791ce"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("edd535ca-c6fd-4690-bc2a-f68a1bd484a2"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1088),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("95d6a20e-b6c1-435c-b6d6-3df3e48a7210"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("3f4060ea-04b8-443f-b5a5-618143f9a397"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1147),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d1f3acd2-56fe-48a3-b04c-71f767834225"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("a0fdb86d-607e-46fb-bfb7-f4311a8360f5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1167),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("233b4ec5-4e8a-49d6-ab58-872ae015ab16"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("2876bcd4-8c6b-400a-a503-f2bba1ad4e87"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1186),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d8e9a2ac-8475-4fdd-9dc2-0b6dcb3a07e9"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("b975c0d1-e528-4b2c-9b24-1c2866ede10d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1207),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1d6a11ee-03a7-4316-8bec-134acd2a1dcb"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("b1521849-165f-4eb7-a3fa-cdaaa25c2ccd"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1228),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1f3ada45-2313-4115-b8ab-0c400f9a9373"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("fc382050-e786-43e9-a970-c49473dc95b1"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1248),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2f4f0fc1-15f2-4b58-94f7-0aad3be3b8ef"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("df4e8a84-3195-4b4f-a960-0af3b3bef455"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1267),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2f733166-22ac-4c85-9122-89cbcb612b01"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("c26f39e9-7650-4351-928f-25fcd9e0f8b7"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(1286),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f974001c-f5ec-4931-9320-807f3f318925"),
                            R = true,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            U = true
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Higher", b =>
                {
                    b.Property<Guid>("HigherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HigherId");

                    b.ToTable("Higher");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Hospitals", b =>
                {
                    b.Property<Guid>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Kinship", b =>
                {
                    b.Property<Guid>("KinshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("KinshipId");

                    b.ToTable("Kinship");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Languages", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = new Guid("dad8fccc-793f-4557-86e6-96805a3becbc"),
                            Alt = "Idioma do país Brasil",
                            Country = "Brasil",
                            Description = "Idioma em Portugues Brasileiro",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3089),
                            FileName = "ptbr.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Portugues",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("79259fe6-38bc-4637-9444-30325ce77ff3"),
                            Alt = "Idioma do país EUA",
                            Country = "EUA",
                            Description = "Idioma em Inglês Norte Americano",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3196),
                            FileName = "us.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inglês",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("9b5ff118-68e1-4e0e-9ab9-1f554266aabf"),
                            Alt = "Idioma do país Espanha.",
                            Country = "Espanha",
                            Description = "Idioma em Espanhol da Espanha.",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3237),
                            FileName = "es.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Espanhol",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MaritalStatus", b =>
                {
                    b.Property<Guid>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Menus", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("MenuIdPai")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenusTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Target")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            Alt = "Menu de Cadastros",
                            Description = "Menu para realizar diversos cadastros",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3542),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("00000000-0000-0000-0000-000000000000"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastros",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("f63b84ef-80d8-4ec2-ab2a-bee261631e03"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3648),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operadoras",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("ce474796-8302-42c6-a734-a1e88601baa2"),
                            Alt = "Listagem de Operadoras",
                            Description = "Realiza a busca de Operadoras",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3687),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/list",
                            MenuIdPai = new Guid("f63b84ef-80d8-4ec2-ab2a-bee261631e03"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8cafd5a2-c81e-4709-9f77-ddf58cf60ff2"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3729),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/details",
                            MenuIdPai = new Guid("f63b84ef-80d8-4ec2-ab2a-bee261631e03"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("47a37c0c-bf55-435b-b715-86405bdc122d"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3797),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("e97da2d6-05c2-4302-8de9-555aa0e251e0"),
                            Alt = "Listagem de Usuarios",
                            Description = "Realiza a busca de Usuarios",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(6565),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/list",
                            MenuIdPai = new Guid("47a37c0c-bf55-435b-b715-86405bdc122d"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c2635ce1-67ee-4945-892d-294f17567f29"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(7870),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/details",
                            MenuIdPai = new Guid("47a37c0c-bf55-435b-b715-86405bdc122d"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("adef594e-7031-480f-aca0-42c5fdb37ed8"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(7920),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menus",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8b73b8b2-ef59-478a-8dc2-cc5bb2c6420d"),
                            Alt = "Listagem de Menus",
                            Description = "Realiza a busca de Menus",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8171),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/list",
                            MenuIdPai = new Guid("adef594e-7031-480f-aca0-42c5fdb37ed8"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("cc37734f-8893-4dd9-88a8-36f9a6697011"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8218),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/details",
                            MenuIdPai = new Guid("adef594e-7031-480f-aca0-42c5fdb37ed8"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("02c4dfb1-14df-4ccf-90fd-518f27e04c78"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8258),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Clientes",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("847a915a-6971-4a38-8c27-bbdc797244c8"),
                            Alt = "Listagem de Clientes",
                            Description = "Realiza a busca de Clientes",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8301),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/list",
                            MenuIdPai = new Guid("02c4dfb1-14df-4ccf-90fd-518f27e04c78"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8a5c237b-0bf9-4147-8a81-6bc9b87791ce"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8341),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/details",
                            MenuIdPai = new Guid("02c4dfb1-14df-4ccf-90fd-518f27e04c78"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("95d6a20e-b6c1-435c-b6d6-3df3e48a7210"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8381),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Idiomas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("d1f3acd2-56fe-48a3-b04c-71f767834225"),
                            Alt = "Listagem de Idiomas",
                            Description = "Realiza a busca de Idiomas",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8453),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/list",
                            MenuIdPai = new Guid("95d6a20e-b6c1-435c-b6d6-3df3e48a7210"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("233b4ec5-4e8a-49d6-ab58-872ae015ab16"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8497),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/details",
                            MenuIdPai = new Guid("95d6a20e-b6c1-435c-b6d6-3df3e48a7210"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("d8e9a2ac-8475-4fdd-9dc2-0b6dcb3a07e9"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8538),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sistemas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("1d6a11ee-03a7-4316-8bec-134acd2a1dcb"),
                            Alt = "Listagem de Sistemas",
                            Description = "Realiza a busca de Sistemas",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8580),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/list",
                            MenuIdPai = new Guid("d8e9a2ac-8475-4fdd-9dc2-0b6dcb3a07e9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("1f3ada45-2313-4115-b8ab-0c400f9a9373"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8619),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/details",
                            MenuIdPai = new Guid("d8e9a2ac-8475-4fdd-9dc2-0b6dcb3a07e9"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2f4f0fc1-15f2-4b58-94f7-0aad3be3b8ef"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8661),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Grupo de Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2f733166-22ac-4c85-9122-89cbcb612b01"),
                            Alt = "Listagem de Grupo de Usuarios",
                            Description = "Realiza a busca de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8701),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/list",
                            MenuIdPai = new Guid("2f4f0fc1-15f2-4b58-94f7-0aad3be3b8ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("f974001c-f5ec-4931-9320-807f3f318925"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8771),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/details",
                            MenuIdPai = new Guid("2f4f0fc1-15f2-4b58-94f7-0aad3be3b8ef"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MenusTypes", b =>
                {
                    b.Property<Guid>("MenusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("MenusTypeId");

                    b.ToTable("MenusType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Offices", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Plans", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CompanyOperatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Procedures", b =>
                {
                    b.Property<Guid>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Providers", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Responsabilities", b =>
                {
                    b.Property<Guid>("ResponsabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ResponsabilityId");

                    b.ToTable("Resposabilities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SalePlans", b =>
                {
                    b.Property<Guid>("SalePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DurationMounth")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SalePlanId");

                    b.ToTable("SalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Shifts", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SocialMedias", b =>
                {
                    b.Property<Guid>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SocialMediaId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Specialities", b =>
                {
                    b.Property<Guid>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.States", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.StatusSolicitation", b =>
                {
                    b.Property<Guid>("SatusSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SatusSolicitationId");

                    b.ToTable("StatusSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Systems", b =>
                {
                    b.Property<Guid>("SystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemId");

                    b.ToTable("Systems");

                    b.HasData(
                        new
                        {
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            Alt = "Sistema Administrativo",
                            Description = "Sistema Administrativo",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(2874),
                            Image = "",
                            IsActive = true,
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsLanguages", b =>
                {
                    b.Property<Guid>("SystemLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("SystemLanguageId");

                    b.ToTable("SystemsLanguages");

                    b.HasData(
                        new
                        {
                            SystemLanguageId = new Guid("fc51afe4-ab02-44ec-a62e-907c667305cc"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3148),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("dad8fccc-793f-4557-86e6-96805a3becbc"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("fe036ebd-dcba-4254-b68d-5c0a81a298f6"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3217),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("79259fe6-38bc-4637-9444-30325ce77ff3"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("4a354337-0ea9-4228-8241-001434a195ce"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3263),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("9b5ff118-68e1-4e0e-9ab9-1f554266aabf"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsMenus", b =>
                {
                    b.Property<Guid>("SystemMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemMenuId");

                    b.ToTable("SystemsMenus");

                    b.HasData(
                        new
                        {
                            SystemMenuId = new Guid("892da13f-72fb-4885-87b7-355cabeda8e6"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3600),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("07f3ffc1-ff0f-4b43-b6b4-dd04d01fa448"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3667),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f63b84ef-80d8-4ec2-ab2a-bee261631e03"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("c189616d-c48c-4249-a272-e3e19c1c143c"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3705),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("ce474796-8302-42c6-a734-a1e88601baa2"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("4374fcfc-2578-401e-93a2-e13bdc5314bb"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3746),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8cafd5a2-c81e-4709-9f77-ddf58cf60ff2"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("76119242-7381-4cfe-91b2-c0a2b3805f69"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(3817),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("47a37c0c-bf55-435b-b715-86405bdc122d"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("197502ed-542f-49a0-894b-904b6f59452b"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(7806),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("e97da2d6-05c2-4302-8de9-555aa0e251e0"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("c83df1ab-a442-404b-bdcb-a8db7e636fba"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(7892),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c2635ce1-67ee-4945-892d-294f17567f29"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("4aa2ac9c-bf39-4540-98d2-db31926e7df2"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8111),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("adef594e-7031-480f-aca0-42c5fdb37ed8"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("86c5bb3e-4599-4a1e-bdf7-87e478a0b281"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8195),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8b73b8b2-ef59-478a-8dc2-cc5bb2c6420d"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("aa89d2ca-1519-423a-8833-151744a13c08"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8237),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("cc37734f-8893-4dd9-88a8-36f9a6697011"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("de4bf978-5fed-448e-9d1f-59da6a6ae476"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8277),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("02c4dfb1-14df-4ccf-90fd-518f27e04c78"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("263149e0-ccf5-484a-bb57-4f6e589dc25c"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8320),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("847a915a-6971-4a38-8c27-bbdc797244c8"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("cb872207-d2cb-40d3-b623-1fec9c91e289"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8360),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8a5c237b-0bf9-4147-8a81-6bc9b87791ce"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("d2d8fef6-5453-4791-9b10-ba32110713f5"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8399),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("95d6a20e-b6c1-435c-b6d6-3df3e48a7210"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("af4ef71f-8823-45ea-b6d5-7826cdfe762e"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8474),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d1f3acd2-56fe-48a3-b04c-71f767834225"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("e23a060c-ec16-4f99-ba9d-cd3623d7fb24"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8515),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("233b4ec5-4e8a-49d6-ab58-872ae015ab16"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("a9a49c7a-2ce3-4a6a-9932-f42c2953d188"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8558),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d8e9a2ac-8475-4fdd-9dc2-0b6dcb3a07e9"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("54f5f956-5d12-4dd9-a74e-94149b915376"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8599),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1d6a11ee-03a7-4316-8bec-134acd2a1dcb"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("25ce067b-c9e4-45f7-8cfb-e5157140e061"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8638),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1f3ada45-2313-4115-b8ab-0c400f9a9373"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("2dce065d-a51a-4bfb-85c7-864ce8653cbd"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8680),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2f4f0fc1-15f2-4b58-94f7-0aad3be3b8ef"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("04ee205d-2fd0-4d3c-bcf3-73aa7ed2d3d0"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8719),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2f733166-22ac-4c85-9122-89cbcb612b01"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("8055aad4-0581-4945-a255-bd687e7caefc"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 747, DateTimeKind.Local).AddTicks(8789),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f974001c-f5ec-4931-9320-807f3f318925"),
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TransportLines", b =>
                {
                    b.Property<Guid>("TransportLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportLineId");

                    b.ToTable("TransportLines");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Transports", b =>
                {
                    b.Property<Guid>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Treatments", b =>
                {
                    b.Property<Guid>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TreatmentId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeProviders", b =>
                {
                    b.Property<Guid>("TypeProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeProviderId");

                    b.ToTable("TypeProviders");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeSolicitation", b =>
                {
                    b.Property<Guid>("TypeSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeSolicitationId");

                    b.ToTable("TypeSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeTransports", b =>
                {
                    b.Property<Guid>("TypeTransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeTransportId");

                    b.ToTable("TypeTransports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Unions", b =>
                {
                    b.Property<Guid>("UnionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UnionId");

                    b.ToTable("Unions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("7c9e8aa6-f6be-4e80-b4cc-7a59154b802c"),
                            ClientId = new Guid("aab934ae-f162-4345-8a9b-c4eab78b6916"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(3224),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrador",
                            Surname = "Master",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersAccess", b =>
                {
                    b.Property<Guid>("UserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DTVerify")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserAccessId");

                    b.ToTable("UsersAccess");

                    b.HasData(
                        new
                        {
                            UserAccessId = new Guid("cb245ff6-d653-4265-99bd-91c05762f1a7"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(4352),
                            IsActive = true,
                            IsDeleted = false,
                            IsVerify = true,
                            Login = "user@uzenix.com",
                            Password = "AO5+45YXX6IBTW3FF/sVqz7BxjClYY3xE0qkWef8lLgJOnM7Rk6cUiF3t8v5huFcWw==",
                            UserId = new Guid("7c9e8aa6-f6be-4e80-b4cc-7a59154b802c")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissions", b =>
                {
                    b.Property<Guid>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionId");

                    b.ToTable("UsersPermissions");

                    b.HasData(
                        new
                        {
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9"),
                            ClientId = new Guid("aab934ae-f162-4345-8a9b-c4eab78b6916"),
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(5891),
                            GroupUserId = new Guid("e53a8ce4-051a-44d8-8267-13f71710209a"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("e50060b5-a03f-4228-b158-e6ca5ee7d0ce"),
                            UserId = new Guid("7c9e8aa6-f6be-4e80-b4cc-7a59154b802c")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissionsMenus", b =>
                {
                    b.Property<Guid>("UserPermissionMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserPermissionId")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionMenuId");

                    b.ToTable("UsersPermissionsMenus");

                    b.HasData(
                        new
                        {
                            UserPermissionMenuId = new Guid("5f86336f-739a-47b5-a7f1-49f384026b98"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7478),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("fbbabcfa-a33d-47ae-a450-ffc191a29b30"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e0b75c8e-1274-4c29-8471-e0b67f0d613a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7603),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f63b84ef-80d8-4ec2-ab2a-bee261631e03"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("1a3a10ed-5ed6-4f5e-ab54-5aa4b333a572"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7626),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("ce474796-8302-42c6-a734-a1e88601baa2"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("23b01e32-e153-4739-8ab9-d73b0e17b667"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7684),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8cafd5a2-c81e-4709-9f77-ddf58cf60ff2"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e433423c-e200-40e4-9067-35c08cc042f3"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7704),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("47a37c0c-bf55-435b-b715-86405bdc122d"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ea8d1e3d-ebce-4886-aeb2-882f376f3455"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7726),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("e97da2d6-05c2-4302-8de9-555aa0e251e0"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("33b35288-bc25-4718-a030-2307eb5f33da"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7746),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c2635ce1-67ee-4945-892d-294f17567f29"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("af6a6b33-bd0a-448f-8f40-13231b253ef9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7766),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("adef594e-7031-480f-aca0-42c5fdb37ed8"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("029d5622-4508-4d6b-a785-3092dfc1e1c3"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7791),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8b73b8b2-ef59-478a-8dc2-cc5bb2c6420d"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("2243302a-33a8-41be-8eb2-a9beb15eefdf"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7812),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("cc37734f-8893-4dd9-88a8-36f9a6697011"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ee9450e0-6eec-42a5-80ba-cbf4ef025b8f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7832),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("02c4dfb1-14df-4ccf-90fd-518f27e04c78"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("c556dbcd-c7da-4a39-8e0b-ddc39e20c04f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7852),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("847a915a-6971-4a38-8c27-bbdc797244c8"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("bf91e099-cff5-4ed9-aae6-b9674e58c706"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7871),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8a5c237b-0bf9-4147-8a81-6bc9b87791ce"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("554851ba-6679-424d-813a-dde426410534"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7891),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("95d6a20e-b6c1-435c-b6d6-3df3e48a7210"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("cb4eb41e-0ed9-4559-979a-11c526433ce1"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7910),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d1f3acd2-56fe-48a3-b04c-71f767834225"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("34525adb-879b-4561-a421-194035931794"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7930),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("233b4ec5-4e8a-49d6-ab58-872ae015ab16"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("f5ee0a7f-3ab1-4e2c-981c-34a5cfcdc419"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7952),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d8e9a2ac-8475-4fdd-9dc2-0b6dcb3a07e9"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("020a1277-11c4-4ee7-a361-0b6eea35d7bf"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(7973),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1d6a11ee-03a7-4316-8bec-134acd2a1dcb"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("a929f509-2d68-48cf-9382-08842dda6a7a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(8072),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1f3ada45-2313-4115-b8ab-0c400f9a9373"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("71dc8fbd-0bd8-4250-b08c-b307a4ab089a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(8102),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2f4f0fc1-15f2-4b58-94f7-0aad3be3b8ef"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("2a19bf92-5615-405c-9c2d-12f58d96c111"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(8123),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2f733166-22ac-4c85-9122-89cbcb612b01"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("a976e5cc-b8e1-475d-b5c3-c4f5e8d6eb13"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(8142),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("f974001c-f5ec-4931-9320-807f3f318925"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("05e9c698-1b91-4d01-b1e6-8e915af7e7f9")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.Property<Guid>("UserPropertieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("TypeUserTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPropertieId");

                    b.HasIndex("TypeUserTypeId");

                    b.ToTable("UsersProperties");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersStatus", b =>
                {
                    b.Property<Guid>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserStatusId");

                    b.ToTable("UsersStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTokens", b =>
                {
                    b.Property<Guid>("UserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTokenId");

                    b.ToTable("UsersTokens");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTypes", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTypeId");

                    b.ToTable("UsersTypes");

                    b.HasData(
                        new
                        {
                            UserTypeId = new Guid("e4f0503f-4535-4dc5-bc6c-0a63147c9c60"),
                            Description = "usuário administrativo",
                            DtInsert = new DateTime(2021, 2, 12, 11, 36, 48, 748, DateTimeKind.Local).AddTicks(2051),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.Systems", "System")
                        .WithMany()
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.UsersTypes", "Type")
                        .WithMany()
                        .HasForeignKey("TypeUserTypeId");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uzx.Infra.Data.Context;

namespace Uzx.Infra.Data.Migrations
{
    [DbContext(typeof(UzxBaseDbContext))]
    [Migration("20210227224112_v14")]
    partial class v14
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Uzx.Domain.Core.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("MessageType")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationDate");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoredEvent");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Patio")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.AddressTypes", b =>
                {
                    b.Property<Guid>("AdressTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("AdressTypesId");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Agents", b =>
                {
                    b.Property<Guid>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Banners", b =>
                {
                    b.Property<Guid>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NameBanner")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Page")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Breeds", b =>
                {
                    b.Property<Guid>("BreedsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("BreedsId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Categories", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cids", b =>
                {
                    b.Property<Guid>("CidsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CidsId");

                    b.ToTable("Cids");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Cities", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Clients", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Document1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Document2")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name2")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Person")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("9015e175-ec92-4c3d-a77c-38bd3ee8ea0b"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 559, DateTimeKind.Local).AddTicks(8353),
                            IsActive = true,
                            IsAdmin = true,
                            IsDeleted = false,
                            Name1 = "Administrador Uzenix",
                            Name2 = "Admin",
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Person = "1",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsConfigurations", b =>
                {
                    b.Property<Guid>("ClientConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessPort")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("DataBaseIP")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseLogin")
                        .HasColumnType("text");

                    b.Property<string>("DataBaseName")
                        .HasColumnType("text");

                    b.Property<string>("DataBasePassword")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCampaingSave")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelFields")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<bool>("enableSsl")
                        .HasColumnType("boolean");

                    b.Property<string>("smtpPass")
                        .HasColumnType("text");

                    b.Property<string>("smtpPort")
                        .HasColumnType("text");

                    b.Property<string>("smtpServer")
                        .HasColumnType("text");

                    b.Property<string>("smtpUser")
                        .HasColumnType("text");

                    b.HasKey("ClientConfigurationId");

                    b.ToTable("ClientsConfigurations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsContacts", b =>
                {
                    b.Property<Guid>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactSector")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientContactId");

                    b.ToTable("ClientsContacts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsNewsletter", b =>
                {
                    b.Property<Guid>("ClientNewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientNewsletterId");

                    b.ToTable("ClientsNewsletter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsOperators", b =>
                {
                    b.Property<Guid>("ClientOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientOperatorId");

                    b.ToTable("ClientsOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.Property<Guid>("ClientSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ClientSystemId");

                    b.HasIndex("SystemId");

                    b.ToTable("ClientsSystems");

                    b.HasData(
                        new
                        {
                            ClientSystemId = new Guid("57e67f20-879c-4830-83b6-de6063337e5c"),
                            ClientId = new Guid("9015e175-ec92-4c3d-a77c-38bd3ee8ea0b"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 563, DateTimeKind.Local).AddTicks(1880),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CompanyOperators", b =>
                {
                    b.Property<Guid>("CompanyOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyOperatorId");

                    b.ToTable("CompanyOperators");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CostCenter", b =>
                {
                    b.Property<Guid>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Countries", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Coupons", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(200)");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Customers", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AddressIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Amenities")
                        .HasColumnType("text");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EmailIsVisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("LogoIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PaymentMethods")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberIsVisible")
                        .HasColumnType("boolean");

                    b.Property<bool>("PhoneNumberIsVisible2")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SiteIsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Specialties")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<string>("VideoLink")
                        .HasColumnType("text");

                    b.Property<string>("Whats")
                        .HasColumnType("text");

                    b.Property<bool>("WhatsIsVisible")
                        .HasColumnType("boolean");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersBanners", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BannerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersBanners");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersCoupons", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersCoupons");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersEvents", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersEvents");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSalePlans", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SalePlanId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.CustomersSocialMedias", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomersSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Departments", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Doctors", b =>
                {
                    b.Property<Guid>("DoctorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("DoctorsId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Educations", b =>
                {
                    b.Property<Guid>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Events", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LkFacebook")
                        .HasColumnType("text");

                    b.Property<string>("LkGooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("LkInstagram")
                        .HasColumnType("text");

                    b.Property<string>("LkLinkedin")
                        .HasColumnType("text");

                    b.Property<string>("LkTwitter")
                        .HasColumnType("text");

                    b.Property<string>("LkYoutube")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.EventsSocialMedias", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("EventId");

                    b.ToTable("EventsSocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.FamilyType", b =>
                {
                    b.Property<Guid>("FamilyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FamilyTypeId");

                    b.ToTable("FamilyType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Functions", b =>
                {
                    b.Property<Guid>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsers", b =>
                {
                    b.Property<Guid>("GroupUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserId");

                    b.ToTable("GroupUsers");

                    b.HasData(
                        new
                        {
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 564, DateTimeKind.Local).AddTicks(5914),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administradores",
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.GroupUsersMenus", b =>
                {
                    b.Property<Guid>("GroupUserMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("GroupUserMenuId");

                    b.ToTable("GroupUsersMenus");

                    b.HasData(
                        new
                        {
                            GroupUserMenuId = new Guid("05239893-f52e-4bb3-936d-26d6c4c10241"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(5770),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("7e4281c2-ab66-41a5-a1fe-1aa2bc1f19c4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6308),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4a0e3a9f-1361-49f9-bf3c-05fb253740d5"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("1ee4aa5d-4714-49c1-b34c-883e3c1664e0"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6378),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("88c3d810-52ca-4ba6-b059-7c674139bba0"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("c575494b-abbe-49d1-ba87-5231535865d5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6430),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("79efc838-8ac1-441d-a31f-2d2f7c9c93f1"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("4d7b9e5e-def1-45a5-b304-0be49056c2d8"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6560),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("3ed488f0-fd26-4724-85cd-2c98c3ce395a"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("245e454f-904e-40be-b1c0-c348db6edb5a"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6607),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4c88a3bb-fa61-4b99-8638-4bd140037163"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("885c25b1-24b1-432c-a635-e085b8370259"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6646),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1b5b0d4a-f2ed-4016-ae15-0ad1dbee1e42"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("fef552e6-c514-4a78-bc87-c31ab6093026"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6684),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("61aaec20-111e-407d-b7c3-909adb57584d"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("4e1b2c6f-3a1e-4770-80ba-04b0fdb8c2e9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6721),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("90dde6f9-3a36-4c7a-b9d6-f168a0fc116f"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("4096656b-df16-45c6-9a28-8fa86f5a5340"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6760),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("534a0b8c-acdd-47ce-84fc-0f39b1cd846b"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("9ce35bc2-96d3-4144-9a4f-1dfc931bd5f3"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6796),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("27dfc2e3-23d6-41c5-bcfe-422733be8743"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("8408e7cf-3444-4aa3-9d72-453ad8f0f4c6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6835),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8352e868-738e-443a-8d9c-18cafa14a15e"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("d4fd0c1b-a161-403f-8618-3404bb209341"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6870),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c8bad62d-4091-45e4-b072-d9b640c9d4aa"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("c9914482-5141-4d72-a71b-249079be6ec5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6906),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b3091cc2-fb9d-4683-be37-27baca1e2ee5"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("d1e3bee0-4040-4ee4-a6b5-a2e344648c20"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6943),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c5d64dfb-697c-46b0-8909-69fe2d9c30d7"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("ffa152eb-1c47-479c-b3c0-8614357e699d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(6980),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d2894634-91de-4fec-8058-e6395fee4d06"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("aee13dab-55bf-4b02-9782-d76c63de8dbc"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(7017),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5070631c-29b2-48a0-a6da-08bcd545d28c"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("df3c2ad6-597a-4cbc-9a61-af2b73f8205c"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(7059),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2c80fe55-49c6-49fd-98ea-1d34d8f30eeb"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("9eec35ec-1f74-45cb-9c4d-45ec39e2f351"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(7097),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b6352257-8e94-4907-b158-6872dbaedf58"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("69263d5a-f475-491e-a83a-4563d0e857ed"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(7139),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c0227e5d-a43e-408d-9b40-b2bbcc8b0ae8"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("a5526eda-1923-44cf-8768-967b439e81a1"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(7234),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("40f1c46c-cf12-408d-8264-6860b45b3012"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        },
                        new
                        {
                            GroupUserMenuId = new Guid("21b3a942-0cd8-4c6e-aff1-1234569ff976"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(7273),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("22764eab-220f-4f76-8490-e7408f0c9a2b"),
                            R = true,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            U = true
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Higher", b =>
                {
                    b.Property<Guid>("HigherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HigherId");

                    b.ToTable("Higher");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Hospitals", b =>
                {
                    b.Property<Guid>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Kinship", b =>
                {
                    b.Property<Guid>("KinshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("KinshipId");

                    b.ToTable("Kinship");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Languages", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = new Guid("dd1bdef9-277e-4231-8bec-9521144ad818"),
                            Alt = "Idioma do país Brasil",
                            Country = "Brasil",
                            Description = "Idioma em Portugues Brasileiro",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 563, DateTimeKind.Local).AddTicks(7721),
                            FileName = "ptbr.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Portugues",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("3a66f80a-c685-48f4-bed5-ba2c87dd7cd1"),
                            Alt = "Idioma do país EUA",
                            Country = "EUA",
                            Description = "Idioma em Inglês Norte Americano",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 564, DateTimeKind.Local).AddTicks(3290),
                            FileName = "us.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inglês",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            LanguageId = new Guid("65d3e4df-f4b0-4052-967b-84aeefcf3478"),
                            Alt = "Idioma do país Espanha.",
                            Country = "Espanha",
                            Description = "Idioma em Espanhol da Espanha.",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 564, DateTimeKind.Local).AddTicks(3564),
                            FileName = "es.js",
                            Image = "png",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Espanhol",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MaritalStatus", b =>
                {
                    b.Property<Guid>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Menus", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("MenuIdPai")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenusTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Target")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            Alt = "Menu de Cadastros",
                            Description = "Menu para realizar diversos cadastros",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(2540),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("00000000-0000-0000-0000-000000000000"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastros",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("4a0e3a9f-1361-49f9-bf3c-05fb253740d5"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(6931),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operadoras",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("88c3d810-52ca-4ba6-b059-7c674139bba0"),
                            Alt = "Listagem de Operadoras",
                            Description = "Realiza a busca de Operadoras",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7107),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/list",
                            MenuIdPai = new Guid("4a0e3a9f-1361-49f9-bf3c-05fb253740d5"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("79efc838-8ac1-441d-a31f-2d2f7c9c93f1"),
                            Alt = "Cadastro de Operadoras",
                            Description = "Realiza o cadastro de Operadoras",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7298),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "companyoperators/details",
                            MenuIdPai = new Guid("4a0e3a9f-1361-49f9-bf3c-05fb253740d5"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("3ed488f0-fd26-4724-85cd-2c98c3ce395a"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7559),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("4c88a3bb-fa61-4b99-8638-4bd140037163"),
                            Alt = "Listagem de Usuarios",
                            Description = "Realiza a busca de Usuarios",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7664),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/list",
                            MenuIdPai = new Guid("3ed488f0-fd26-4724-85cd-2c98c3ce395a"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("1b5b0d4a-f2ed-4016-ae15-0ad1dbee1e42"),
                            Alt = "Cadastro de Usuarios",
                            Description = "Realiza o cadastro de Usuarios",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7743),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "users/details",
                            MenuIdPai = new Guid("3ed488f0-fd26-4724-85cd-2c98c3ce395a"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("61aaec20-111e-407d-b7c3-909adb57584d"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7817),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menus",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("90dde6f9-3a36-4c7a-b9d6-f168a0fc116f"),
                            Alt = "Listagem de Menus",
                            Description = "Realiza a busca de Menus",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7897),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/list",
                            MenuIdPai = new Guid("61aaec20-111e-407d-b7c3-909adb57584d"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("534a0b8c-acdd-47ce-84fc-0f39b1cd846b"),
                            Alt = "Cadastro de Menus",
                            Description = "Realiza o cadastro de Menus",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7981),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "menus/details",
                            MenuIdPai = new Guid("61aaec20-111e-407d-b7c3-909adb57584d"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("27dfc2e3-23d6-41c5-bcfe-422733be8743"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8191),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Clientes",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("8352e868-738e-443a-8d9c-18cafa14a15e"),
                            Alt = "Listagem de Clientes",
                            Description = "Realiza a busca de Clientes",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8304),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/list",
                            MenuIdPai = new Guid("27dfc2e3-23d6-41c5-bcfe-422733be8743"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c8bad62d-4091-45e4-b072-d9b640c9d4aa"),
                            Alt = "Cadastro de Clientes",
                            Description = "Realiza o cadastro de Clientes",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8382),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "clients/details",
                            MenuIdPai = new Guid("27dfc2e3-23d6-41c5-bcfe-422733be8743"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("b3091cc2-fb9d-4683-be37-27baca1e2ee5"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8455),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Idiomas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c5d64dfb-697c-46b0-8909-69fe2d9c30d7"),
                            Alt = "Listagem de Idiomas",
                            Description = "Realiza a busca de Idiomas",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8530),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/list",
                            MenuIdPai = new Guid("b3091cc2-fb9d-4683-be37-27baca1e2ee5"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("d2894634-91de-4fec-8058-e6395fee4d06"),
                            Alt = "Cadastro de Idiomas",
                            Description = "Realiza o cadastro de Idiomas",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8605),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "languages/details",
                            MenuIdPai = new Guid("b3091cc2-fb9d-4683-be37-27baca1e2ee5"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("5070631c-29b2-48a0-a6da-08bcd545d28c"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8691),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sistemas",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("2c80fe55-49c6-49fd-98ea-1d34d8f30eeb"),
                            Alt = "Listagem de Sistemas",
                            Description = "Realiza a busca de Sistemas",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8832),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/list",
                            MenuIdPai = new Guid("5070631c-29b2-48a0-a6da-08bcd545d28c"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("b6352257-8e94-4907-b158-6872dbaedf58"),
                            Alt = "Cadastro de Sistemas",
                            Description = "Realiza o cadastro de Sistemas",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8906),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "systems/details",
                            MenuIdPai = new Guid("5070631c-29b2-48a0-a6da-08bcd545d28c"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("c0227e5d-a43e-408d-9b40-b2bbcc8b0ae8"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8981),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "",
                            MenuIdPai = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Grupo de Usuarios",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("40f1c46c-cf12-408d-8264-6860b45b3012"),
                            Alt = "Listagem de Grupo de Usuarios",
                            Description = "Realiza a busca de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(9051),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/list",
                            MenuIdPai = new Guid("c0227e5d-a43e-408d-9b40-b2bbcc8b0ae8"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Listar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("22764eab-220f-4f76-8490-e7408f0c9a2b"),
                            Alt = "Cadastro de Grupo de Usuarios",
                            Description = "Realiza o cadastro de Grupo de Usuarios",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(9120),
                            Icone = "",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "groupusers/details",
                            MenuIdPai = new Guid("c0227e5d-a43e-408d-9b40-b2bbcc8b0ae8"),
                            MenusTypeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cadastrar",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.MenusTypes", b =>
                {
                    b.Property<Guid>("MenusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("MenusTypeId");

                    b.ToTable("MenusType");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Offices", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Plans", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CompanyOperatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Procedures", b =>
                {
                    b.Property<Guid>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Providers", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Responsabilities", b =>
                {
                    b.Property<Guid>("ResponsabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ResponsabilityId");

                    b.ToTable("Resposabilities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SalePlans", b =>
                {
                    b.Property<Guid>("SalePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DurationMounth")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanner")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoupons")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDestaque")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvents")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGuia")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SalePlanId");

                    b.ToTable("SalePlans");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Shifts", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SocialMedias", b =>
                {
                    b.Property<Guid>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SocialMediaId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Specialities", b =>
                {
                    b.Property<Guid>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.States", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.StatusSolicitation", b =>
                {
                    b.Property<Guid>("SatusSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SatusSolicitationId");

                    b.ToTable("StatusSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Systems", b =>
                {
                    b.Property<Guid>("SystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemId");

                    b.ToTable("Systems");

                    b.HasData(
                        new
                        {
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            Alt = "Sistema Administrativo",
                            Description = "Sistema Administrativo",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 562, DateTimeKind.Local).AddTicks(7189),
                            Image = "",
                            IsActive = true,
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsLanguages", b =>
                {
                    b.Property<Guid>("SystemLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.HasKey("SystemLanguageId");

                    b.ToTable("SystemsLanguages");

                    b.HasData(
                        new
                        {
                            SystemLanguageId = new Guid("aa558ad5-dd29-4179-b420-4f34e21cfda2"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 564, DateTimeKind.Local).AddTicks(2588),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("dd1bdef9-277e-4231-8bec-9521144ad818"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("ced8a8bc-3dd7-437a-9485-ba0a36191de0"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 564, DateTimeKind.Local).AddTicks(3487),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("3a66f80a-c685-48f4-bed5-ba2c87dd7cd1"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7")
                        },
                        new
                        {
                            SystemLanguageId = new Guid("68ef487f-656d-47b7-8c28-dcc999f269d2"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 564, DateTimeKind.Local).AddTicks(3634),
                            IsActive = true,
                            IsDefault = true,
                            IsDeleted = false,
                            LanguageId = new Guid("65d3e4df-f4b0-4052-967b-84aeefcf3478"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.SystemsMenus", b =>
                {
                    b.Property<Guid>("SystemMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("SystemMenuId");

                    b.ToTable("SystemsMenus");

                    b.HasData(
                        new
                        {
                            SystemMenuId = new Guid("3ea091ae-1592-4834-a45d-253b1a8d5d55"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(5864),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("60158115-b1c2-46ad-bb69-5ab373dc7edf"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7046),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4a0e3a9f-1361-49f9-bf3c-05fb253740d5"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("e9f3bcf5-d30b-4d3c-9a56-5b4f3a3140ed"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7144),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("88c3d810-52ca-4ba6-b059-7c674139bba0"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("92422c56-ee11-47fb-a27c-e888a9f7604b"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7348),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("79efc838-8ac1-441d-a31f-2d2f7c9c93f1"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("4a8766f3-387f-4e63-9d23-aee66c73e5d5"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7604),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("3ed488f0-fd26-4724-85cd-2c98c3ce395a"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("32787569-cef3-41c1-b4c3-48055babd87d"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7701),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4c88a3bb-fa61-4b99-8638-4bd140037163"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("076002df-80c6-4efc-8888-89936006d946"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7778),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1b5b0d4a-f2ed-4016-ae15-0ad1dbee1e42"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("bcf853d9-91d2-48f8-87e2-5c3b21e3c969"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7851),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("61aaec20-111e-407d-b7c3-909adb57584d"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("9daa6ac0-93aa-4029-9756-755cc90f3b69"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(7938),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("90dde6f9-3a36-4c7a-b9d6-f168a0fc116f"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("f8b11550-deec-4e05-8621-fb83d3b53182"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8138),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("534a0b8c-acdd-47ce-84fc-0f39b1cd846b"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("b7b032dc-15bc-4bf6-9083-bf5974731e45"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8230),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("27dfc2e3-23d6-41c5-bcfe-422733be8743"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("b82ceba9-f365-4949-83ce-b3e74a7c4cc6"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8339),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8352e868-738e-443a-8d9c-18cafa14a15e"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("befffa5e-2002-41f3-b9b9-30becb405e88"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8415),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c8bad62d-4091-45e4-b072-d9b640c9d4aa"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("a0d87b2c-b035-4f03-ac66-29ffcf301564"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8491),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b3091cc2-fb9d-4683-be37-27baca1e2ee5"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("24849eb1-97b7-4efc-ae7f-1856a5dc945e"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8566),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c5d64dfb-697c-46b0-8909-69fe2d9c30d7"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("c8aa871e-c63e-4aa3-a233-1b2fca8d4cbf"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8643),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d2894634-91de-4fec-8058-e6395fee4d06"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("2b9bd656-1e11-4924-8945-ae1c1a093b99"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8788),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5070631c-29b2-48a0-a6da-08bcd545d28c"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("907ac2cf-78e5-42bc-ad0b-68e5026572f2"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8865),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2c80fe55-49c6-49fd-98ea-1d34d8f30eeb"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("19797bae-0382-474b-a861-a33a5665017f"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(8941),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b6352257-8e94-4907-b158-6872dbaedf58"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("5e69a354-d43b-43bb-a8cd-668932fcbde7"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(9012),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c0227e5d-a43e-408d-9b40-b2bbcc8b0ae8"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("a2f65e4d-d1fe-47ea-ae9d-e3e4b54f4615"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(9083),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("40f1c46c-cf12-408d-8264-6860b45b3012"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            SystemMenuId = new Guid("0be3fc51-5973-42f1-b27f-8168dfa3ba97"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 565, DateTimeKind.Local).AddTicks(9153),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("22764eab-220f-4f76-8490-e7408f0c9a2b"),
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TransportLines", b =>
                {
                    b.Property<Guid>("TransportLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportLineId");

                    b.ToTable("TransportLines");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Transports", b =>
                {
                    b.Property<Guid>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TransportId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Treatments", b =>
                {
                    b.Property<Guid>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TreatmentId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeProviders", b =>
                {
                    b.Property<Guid>("TypeProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeProviderId");

                    b.ToTable("TypeProviders");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeSolicitation", b =>
                {
                    b.Property<Guid>("TypeSolicitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeSolicitationId");

                    b.ToTable("TypeSolicitation");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.TypeTransports", b =>
                {
                    b.Property<Guid>("TypeTransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("TypeTransportId");

                    b.ToTable("TypeTransports");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Unions", b =>
                {
                    b.Property<Guid>("UnionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UnionId");

                    b.ToTable("Unions");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Icone")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("894faf08-7afe-4bd1-8e75-4788233ac792"),
                            ClientId = new Guid("9015e175-ec92-4c3d-a77c-38bd3ee8ea0b"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 567, DateTimeKind.Local).AddTicks(2530),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrador",
                            Surname = "Master",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersAccess", b =>
                {
                    b.Property<Guid>("UserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DTVerify")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserAccessId");

                    b.ToTable("UsersAccess");

                    b.HasData(
                        new
                        {
                            UserAccessId = new Guid("4e17dc11-2c34-454a-b95f-33e4e59907ca"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 567, DateTimeKind.Local).AddTicks(5957),
                            IsActive = true,
                            IsDeleted = false,
                            IsVerify = true,
                            Login = "user@uzenix.com",
                            Password = "AO5+45YXX6IBTW3FF/sVqz7BxjClYY3xE0qkWef8lLgJOnM7Rk6cUiF3t8v5huFcWw==",
                            UserId = new Guid("894faf08-7afe-4bd1-8e75-4788233ac792")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissions", b =>
                {
                    b.Property<Guid>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionId");

                    b.ToTable("UsersPermissions");

                    b.HasData(
                        new
                        {
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049"),
                            ClientId = new Guid("9015e175-ec92-4c3d-a77c-38bd3ee8ea0b"),
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 567, DateTimeKind.Local).AddTicks(9477),
                            GroupUserId = new Guid("f5b6b38e-6e01-43ea-ac25-725947c709de"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemId = new Guid("450afe22-1e3b-4af4-b4dc-58a3e04683f7"),
                            UserId = new Guid("894faf08-7afe-4bd1-8e75-4788233ac792")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersPermissionsMenus", b =>
                {
                    b.Property<Guid>("UserPermissionMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("C")
                        .HasColumnType("boolean");

                    b.Property<bool>("D")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<bool>("R")
                        .HasColumnType("boolean");

                    b.Property<bool>("U")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserPermissionId")
                        .HasColumnType("uuid");

                    b.HasKey("UserPermissionMenuId");

                    b.ToTable("UsersPermissionsMenus");

                    b.HasData(
                        new
                        {
                            UserPermissionMenuId = new Guid("e61f97a8-3eb1-427a-9fb5-bc17594ad51c"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3367),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("0deaeefe-4dfe-4aaf-b5e1-e008a2dd1b66"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("5ed26dff-18ba-4727-8cfa-c1e834eafff8"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3649),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4a0e3a9f-1361-49f9-bf3c-05fb253740d5"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("aa746fcf-41a3-4a63-b880-01474cdb7f41"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3688),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("88c3d810-52ca-4ba6-b059-7c674139bba0"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("cec6005e-acd4-4306-be3a-2cacb196a846"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3714),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("79efc838-8ac1-441d-a31f-2d2f7c9c93f1"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e3e8215b-f4fb-4b8b-8991-3462378d1288"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3738),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("3ed488f0-fd26-4724-85cd-2c98c3ce395a"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("619dff44-ecd3-4e01-aa03-8501a0d3b1e4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3765),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("4c88a3bb-fa61-4b99-8638-4bd140037163"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e68600b4-521a-4639-b242-2c924a1f18f9"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3788),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("1b5b0d4a-f2ed-4016-ae15-0ad1dbee1e42"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("54fcac41-34c0-48ed-bf36-ac8ba27857b2"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3811),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("61aaec20-111e-407d-b7c3-909adb57584d"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("0f6f0458-ee3f-450a-999b-f31988727754"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3833),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("90dde6f9-3a36-4c7a-b9d6-f168a0fc116f"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("05aa5830-234c-4782-918c-31ff342c282d"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3959),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("534a0b8c-acdd-47ce-84fc-0f39b1cd846b"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("0b5616b1-3829-4fc1-8ccb-83ba306f8390"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(3983),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("27dfc2e3-23d6-41c5-bcfe-422733be8743"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("94e3d27d-123f-47ae-b7ec-b5b3acabe674"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4006),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("8352e868-738e-443a-8d9c-18cafa14a15e"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("ee3328f0-59c3-41af-af0a-d1ceb52324bc"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4028),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c8bad62d-4091-45e4-b072-d9b640c9d4aa"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("95bc1dd7-eaba-4fc6-b5b9-9ff1786dac16"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4050),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b3091cc2-fb9d-4683-be37-27baca1e2ee5"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("0eb2d8c6-1f0e-4a10-9a37-7ba399bf8cc4"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4072),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c5d64dfb-697c-46b0-8909-69fe2d9c30d7"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("7fb5d275-c301-48b9-80b5-14069e08faab"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4094),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("d2894634-91de-4fec-8058-e6395fee4d06"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("03955a04-b87f-4b31-a4a3-802d52da9a4f"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4117),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("5070631c-29b2-48a0-a6da-08bcd545d28c"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("dae6f319-a3cc-4f92-b817-9f6c0d9f0690"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4144),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("2c80fe55-49c6-49fd-98ea-1d34d8f30eeb"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("e2705b11-725e-488c-af86-c5ee5f7f8110"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4167),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("b6352257-8e94-4907-b158-6872dbaedf58"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("7a07eead-8f23-4d5e-9d92-5c9138c141b6"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4190),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("c0227e5d-a43e-408d-9b40-b2bbcc8b0ae8"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("74019d1a-9034-47b3-bbba-734dc7a0d6d1"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4212),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("40f1c46c-cf12-408d-8264-6860b45b3012"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        },
                        new
                        {
                            UserPermissionMenuId = new Guid("53c15963-8fab-4d8e-8366-eae0075e24d5"),
                            C = true,
                            D = true,
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 568, DateTimeKind.Local).AddTicks(4235),
                            IsActive = true,
                            IsDeleted = false,
                            MenuId = new Guid("22764eab-220f-4f76-8490-e7408f0c9a2b"),
                            R = true,
                            U = true,
                            UserPermissionId = new Guid("5dd68006-3167-449c-85db-826ede251049")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.Property<Guid>("UserPropertieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(13)");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("TypeUserTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserPropertieId");

                    b.HasIndex("TypeUserTypeId");

                    b.ToTable("UsersProperties");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersStatus", b =>
                {
                    b.Property<Guid>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserStatusId");

                    b.ToTable("UsersStatus");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTokens", b =>
                {
                    b.Property<Guid>("UserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTokenId");

                    b.ToTable("UsersTokens");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersTypes", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DtLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserIdDeleted")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdInsert")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uuid");

                    b.HasKey("UserTypeId");

                    b.ToTable("UsersTypes");

                    b.HasData(
                        new
                        {
                            UserTypeId = new Guid("125e6d70-2a8a-45be-aebb-1707094dfa1d"),
                            Description = "usuário administrativo",
                            DtInsert = new DateTime(2021, 2, 27, 19, 41, 10, 566, DateTimeKind.Local).AddTicks(9544),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Administrativo",
                            UserIdInsert = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.ClientsSystems", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.Systems", "System")
                        .WithMany()
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("System");
                });

            modelBuilder.Entity("Uzx.Domain.Entities.Admin.UsersProperties", b =>
                {
                    b.HasOne("Uzx.Domain.Entities.Admin.UsersTypes", "Type")
                        .WithMany()
                        .HasForeignKey("TypeUserTypeId");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
